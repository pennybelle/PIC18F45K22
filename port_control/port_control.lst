;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 4/23/2025 5:34:41 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF001EF1A  	GOTO        564
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x001C	0x0000      	NOP
0x001E	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x0020	0x0012      	RETURN      0
; end of _Delay_1us
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x0022	0x0E0F      	MOVLW       15
0x0024	0x6E0C      	MOVWF       R12, 0
0x0026	0x0E47      	MOVLW       71
0x0028	0x6E0D      	MOVWF       R13, 0
L_Delay_5500us5:
0x002A	0x2E0D      	DECFSZ      R13, 1, 0
0x002C	0xD7FE      	BRA         L_Delay_5500us5
0x002E	0x2E0C      	DECFSZ      R12, 1, 0
0x0030	0xD7FC      	BRA         L_Delay_5500us5
0x0032	0x0000      	NOP
0x0034	0x0000      	NOP
;__Lib_Delays.c,33 :: 		}
L_end_Delay_5500us:
0x0036	0x0012      	RETURN      0
; end of _Delay_5500us
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x0038	0x0E21      	MOVLW       33
0x003A	0x6E0D      	MOVWF       R13, 0
L_Delay_50us2:
0x003C	0x2E0D      	DECFSZ      R13, 1, 0
0x003E	0xD7FE      	BRA         L_Delay_50us2
;__Lib_Delays.c,21 :: 		}
L_end_Delay_50us:
0x0040	0x0012      	RETURN      0
; end of _Delay_50us
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x0042	0x0100      	MOVLB       0
0x0044	0xBF68      	BTFSC       FARG_Lcd_Cmd_out_char, 7, 1
0x0046	0xD002      	BRA         L__Lcd_Cmd21
0x0048	0x968A      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x004A	0xD001      	BRA         L__Lcd_Cmd22
L__Lcd_Cmd21:
0x004C	0x868A      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x004E	0xBD68      	BTFSC       FARG_Lcd_Cmd_out_char, 6, 1
0x0050	0xD002      	BRA         L__Lcd_Cmd23
0x0052	0x948A      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x0054	0xD001      	BRA         L__Lcd_Cmd24
L__Lcd_Cmd23:
0x0056	0x848A      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x0058	0xBB68      	BTFSC       FARG_Lcd_Cmd_out_char, 5, 1
0x005A	0xD002      	BRA         L__Lcd_Cmd25
0x005C	0x928A      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x005E	0xD001      	BRA         L__Lcd_Cmd26
L__Lcd_Cmd25:
0x0060	0x828A      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x0062	0xB968      	BTFSC       FARG_Lcd_Cmd_out_char, 4, 1
0x0064	0xD002      	BRA         L__Lcd_Cmd27
0x0066	0x908A      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x0068	0xD001      	BRA         L__Lcd_Cmd28
L__Lcd_Cmd27:
0x006A	0x808A      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x006C	0xB05F      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x006E	0xD002      	BRA         L__Lcd_Cmd29
0x0070	0x888A      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x0072	0xD001      	BRA         L__Lcd_Cmd30
L__Lcd_Cmd29:
0x0074	0x988A      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x0076	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,29 :: 		
0x0078	0xDFD1      	RCALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x007A	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,33 :: 		
0x007C	0xB768      	BTFSC       FARG_Lcd_Cmd_out_char, 3, 1
0x007E	0xD002      	BRA         L__Lcd_Cmd31
0x0080	0x968A      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x0082	0xD001      	BRA         L__Lcd_Cmd32
L__Lcd_Cmd31:
0x0084	0x868A      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x0086	0xB568      	BTFSC       FARG_Lcd_Cmd_out_char, 2, 1
0x0088	0xD002      	BRA         L__Lcd_Cmd33
0x008A	0x948A      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x008C	0xD001      	BRA         L__Lcd_Cmd34
L__Lcd_Cmd33:
0x008E	0x848A      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x0090	0xB368      	BTFSC       FARG_Lcd_Cmd_out_char, 1, 1
0x0092	0xD002      	BRA         L__Lcd_Cmd35
0x0094	0x928A      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x0096	0xD001      	BRA         L__Lcd_Cmd36
L__Lcd_Cmd35:
0x0098	0x828A      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x009A	0xB168      	BTFSC       FARG_Lcd_Cmd_out_char, 0, 1
0x009C	0xD002      	BRA         L__Lcd_Cmd37
0x009E	0x908A      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x00A0	0xD001      	BRA         L__Lcd_Cmd38
L__Lcd_Cmd37:
0x00A2	0x808A      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x00A4	0xB05F      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x00A6	0xD002      	BRA         L__Lcd_Cmd39
0x00A8	0x888A      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x00AA	0xD001      	BRA         L__Lcd_Cmd40
L__Lcd_Cmd39:
0x00AC	0x988A      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x00AE	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,41 :: 		
0x00B0	0xDFB5      	RCALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x00B2	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,44 :: 		
0x00B4	0xA05F      	BTFSS       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x00B6	0xD002      	BRA         L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x00B8	0xDFB4      	RCALL       _Delay_5500us
0x00BA	0xD001      	BRA         L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x00BC	0xDFBD      	RCALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x00BE	0x0012      	RETURN      0
; end of _Lcd_Cmd
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x00C0	0x905F      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,53 :: 		
0x00C2	0xF068C067  	MOVFF       FARG_Lcd_Chr_CP_out_char, FARG_Lcd_Cmd_out_char
0x00C6	0xDFBD      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x00C8	0x805F      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x00CA	0x0012      	RETURN      0
; end of _Lcd_Chr_CP
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x00CC	0xD010      	BRA         L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x00CE	0x0E80      	MOVLW       128
0x00D0	0x0100      	MOVLB       0
0x00D2	0x6F63      	MOVWF       FARG_Lcd_Out_row, 1
0x00D4	0xD01A      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x00D6	0x0EC0      	MOVLW       192
0x00D8	0x6F63      	MOVWF       FARG_Lcd_Out_row, 1
0x00DA	0xD017      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x00DC	0x0E94      	MOVLW       148
0x00DE	0x6F63      	MOVWF       FARG_Lcd_Out_row, 1
0x00E0	0xD014      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x00E2	0x0ED4      	MOVLW       212
0x00E4	0x6F63      	MOVWF       FARG_Lcd_Out_row, 1
0x00E6	0xD011      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x00E8	0x0E80      	MOVLW       128
0x00EA	0x6F63      	MOVWF       FARG_Lcd_Out_row, 1
;__Lib_Lcd.c,193 :: 		
0x00EC	0xD00E      	BRA         L_Lcd_Out12
L_Lcd_Out11:
0x00EE	0x0100      	MOVLB       0
0x00F0	0x5163      	MOVF        FARG_Lcd_Out_row, 0, 1
0x00F2	0x0A01      	XORLW       1
0x00F4	0xE0EC      	BZ          L_Lcd_Out13
0x00F6	0x5163      	MOVF        FARG_Lcd_Out_row, 0, 1
0x00F8	0x0A02      	XORLW       2
0x00FA	0xE0ED      	BZ          L_Lcd_Out14
0x00FC	0x5163      	MOVF        FARG_Lcd_Out_row, 0, 1
0x00FE	0x0A03      	XORLW       3
0x0100	0xE0ED      	BZ          L_Lcd_Out15
0x0102	0x5163      	MOVF        FARG_Lcd_Out_row, 0, 1
0x0104	0x0A04      	XORLW       4
0x0106	0xE0ED      	BZ          L_Lcd_Out16
0x0108	0xD7EF      	BRA         L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x010A	0x0564      	DECF        FARG_Lcd_Out_column, 0, 1
0x010C	0x6E00      	MOVWF       R0 
0x010E	0x5163      	MOVF        FARG_Lcd_Out_row, 0, 1
0x0110	0x2600      	ADDWF       R0, 1 
0x0112	0xF063C000  	MOVFF       R0, FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x0116	0xF068C000  	MOVFF       R0, FARG_Lcd_Cmd_out_char
0x011A	0xDF93      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x011C	0x905F      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,198 :: 		
0x011E	0x6B60      	CLRF        Lcd_Out_i_L0, 1
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x0120	0x5160      	MOVF        Lcd_Out_i_L0, 0, 1
0x0122	0x2565      	ADDWF       FARG_Lcd_Out_text, 0, 1
0x0124	0x6EE9      	MOVWF       FSR0L 
0x0126	0x0E00      	MOVLW       0
0x0128	0x2166      	ADDWFC      FARG_Lcd_Out_text+1, 0, 1
0x012A	0x6EEA      	MOVWF       FSR0L+1 
0x012C	0x52EE      	MOVF        POSTINC0, 1 
0x012E	0xE00B      	BZ          L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x0130	0x5160      	MOVF        Lcd_Out_i_L0, 0, 1
0x0132	0x2565      	ADDWF       FARG_Lcd_Out_text, 0, 1
0x0134	0x6EE9      	MOVWF       FSR0L 
0x0136	0x0E00      	MOVLW       0
0x0138	0x2166      	ADDWFC      FARG_Lcd_Out_text+1, 0, 1
0x013A	0x6EEA      	MOVWF       FSR0L+1 
0x013C	0xF067CFEE  	MOVFF       POSTINC0, FARG_Lcd_Chr_CP_out_char
0x0140	0xDFBF      	RCALL       _Lcd_Chr_CP
0x0142	0x2B60      	INCF        Lcd_Out_i_L0, 1, 1
0x0144	0xD7ED      	BRA         L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x0146	0x805F      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x0148	0x0012      	RETURN      0
; end of _Lcd_Out
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x014A	0x9A93      	BCF         LCD_EN_Direction, BitPos(LCD_EN_Direction+0) 
;__Lib_Lcd.c,87 :: 		
0x014C	0x9893      	BCF         LCD_RS_Direction, BitPos(LCD_RS_Direction+0) 
;__Lib_Lcd.c,88 :: 		
0x014E	0x9093      	BCF         LCD_D4_Direction, BitPos(LCD_D4_Direction+0) 
;__Lib_Lcd.c,89 :: 		
0x0150	0x9293      	BCF         LCD_D5_Direction, BitPos(LCD_D5_Direction+0) 
;__Lib_Lcd.c,90 :: 		
0x0152	0x9493      	BCF         LCD_D6_Direction, BitPos(LCD_D6_Direction+0) 
;__Lib_Lcd.c,91 :: 		
0x0154	0x9693      	BCF         LCD_D7_Direction, BitPos(LCD_D7_Direction+0) 
;__Lib_Lcd.c,93 :: 		
0x0156	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,94 :: 		
0x0158	0x988A      	BCF         LCD_RS, BitPos(LCD_RS+0) 
;__Lib_Lcd.c,95 :: 		
0x015A	0x968A      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,96 :: 		
0x015C	0x948A      	BCF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,97 :: 		
0x015E	0x928A      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,98 :: 		
0x0160	0x908A      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,100 :: 		
0x0162	0xDF5F      	RCALL       _Delay_5500us
;__Lib_Lcd.c,101 :: 		
0x0164	0xDF5E      	RCALL       _Delay_5500us
;__Lib_Lcd.c,102 :: 		
0x0166	0xDF5D      	RCALL       _Delay_5500us
;__Lib_Lcd.c,105 :: 		
0x0168	0x828A      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,106 :: 		
0x016A	0x808A      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,107 :: 		
0x016C	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,108 :: 		
0x016E	0xDF56      	RCALL       _Delay_1us
;__Lib_Lcd.c,109 :: 		
0x0170	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,110 :: 		
0x0172	0xDF57      	RCALL       _Delay_5500us
;__Lib_Lcd.c,112 :: 		
0x0174	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,113 :: 		
0x0176	0xDF52      	RCALL       _Delay_1us
;__Lib_Lcd.c,114 :: 		
0x0178	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,115 :: 		
0x017A	0xDF53      	RCALL       _Delay_5500us
;__Lib_Lcd.c,117 :: 		
0x017C	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,118 :: 		
0x017E	0xDF4E      	RCALL       _Delay_1us
;__Lib_Lcd.c,119 :: 		
0x0180	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,120 :: 		
0x0182	0xDF4F      	RCALL       _Delay_5500us
;__Lib_Lcd.c,123 :: 		
0x0184	0x908A      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,124 :: 		
0x0186	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,125 :: 		
0x0188	0xDF49      	RCALL       _Delay_1us
;__Lib_Lcd.c,126 :: 		
0x018A	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,127 :: 		
0x018C	0xDF4A      	RCALL       _Delay_5500us
;__Lib_Lcd.c,130 :: 		
0x018E	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,131 :: 		
0x0190	0xDF45      	RCALL       _Delay_1us
;__Lib_Lcd.c,132 :: 		
0x0192	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,134 :: 		
0x0194	0x928A      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,135 :: 		
0x0196	0x868A      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,136 :: 		
0x0198	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,137 :: 		
0x019A	0xDF40      	RCALL       _Delay_1us
;__Lib_Lcd.c,138 :: 		
0x019C	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,139 :: 		
0x019E	0xDF41      	RCALL       _Delay_5500us
;__Lib_Lcd.c,142 :: 		
0x01A0	0x968A      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,143 :: 		
0x01A2	0x808A      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,144 :: 		
0x01A4	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,145 :: 		
0x01A6	0xDF3A      	RCALL       _Delay_1us
;__Lib_Lcd.c,146 :: 		
0x01A8	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,148 :: 		
0x01AA	0x908A      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,149 :: 		
0x01AC	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,150 :: 		
0x01AE	0xDF36      	RCALL       _Delay_1us
;__Lib_Lcd.c,151 :: 		
0x01B0	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,152 :: 		
0x01B2	0xDF37      	RCALL       _Delay_5500us
;__Lib_Lcd.c,155 :: 		
0x01B4	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,156 :: 		
0x01B6	0xDF32      	RCALL       _Delay_1us
;__Lib_Lcd.c,157 :: 		
0x01B8	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,159 :: 		
0x01BA	0x808A      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,160 :: 		
0x01BC	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,161 :: 		
0x01BE	0xDF2E      	RCALL       _Delay_1us
;__Lib_Lcd.c,162 :: 		
0x01C0	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,163 :: 		
0x01C2	0xDF2F      	RCALL       _Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x01C4	0x908A      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,167 :: 		
0x01C6	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,168 :: 		
0x01C8	0xDF29      	RCALL       _Delay_1us
;__Lib_Lcd.c,169 :: 		
0x01CA	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,171 :: 		
0x01CC	0x868A      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,172 :: 		
0x01CE	0x848A      	BSF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,173 :: 		
0x01D0	0x828A      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,174 :: 		
0x01D2	0x808A      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,175 :: 		
0x01D4	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,176 :: 		
0x01D6	0xDF22      	RCALL       _Delay_1us
;__Lib_Lcd.c,177 :: 		
0x01D8	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,179 :: 		
0x01DA	0xDF23      	RCALL       _Delay_5500us
;__Lib_Lcd.c,181 :: 		
0x01DC	0x805F      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x01DE	0x0012      	RETURN      0
; end of _Lcd_Init
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x01E0	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x01E2	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x01E6	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x01E8	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x01EA	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x01EC	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x01EE	0x0012      	RETURN      0
; end of ___CC2DW
_lcd_display_prep:
;port_control.c,33 :: 		void lcd_display_prep() {
;port_control.c,34 :: 		ANSELB = 0;                        // Configure PORTB pins as digital
0x01F0	0x010F      	MOVLB       15
0x01F2	0x6B39      	CLRF        ANSELB, 1
;port_control.c,35 :: 		Lcd_Init();                        // Initialize Lcd
0x01F4	0xDFAA      	RCALL       _Lcd_Init
;port_control.c,36 :: 		Lcd_Cmd(_LCD_CLEAR);               // Clear display
0x01F6	0x0E01      	MOVLW       1
0x01F8	0x0100      	MOVLB       0
0x01FA	0x6F68      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x01FC	0xDF22      	RCALL       _Lcd_Cmd
;port_control.c,37 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);          // Cursor off
0x01FE	0x0E0C      	MOVLW       12
0x0200	0x6F68      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0202	0xDF1F      	RCALL       _Lcd_Cmd
;port_control.c,38 :: 		}
L_end_lcd_display_prep:
0x0204	0x0012      	RETURN      0
; end of _lcd_display_prep
_lcd_display_out:
;port_control.c,41 :: 		void lcd_display_out(char first_line, char second_line) {
;port_control.c,42 :: 		Lcd_Cmd(_LCD_CLEAR);               // Clear display
0x0206	0x0E01      	MOVLW       1
0x0208	0x0100      	MOVLB       0
0x020A	0x6F68      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x020C	0xDF1A      	RCALL       _Lcd_Cmd
;port_control.c,43 :: 		Lcd_Out(1,1,first_line);                 // Write text in first row
0x020E	0x0E01      	MOVLW       1
0x0210	0x6F63      	MOVWF       FARG_Lcd_Out_row, 1
0x0212	0x0E01      	MOVLW       1
0x0214	0x6F64      	MOVWF       FARG_Lcd_Out_column, 1
0x0216	0xF065C061  	MOVFF       FARG_lcd_display_out_first_line, FARG_Lcd_Out_text
0x021A	0x0E00      	MOVLW       0
0x021C	0x6F66      	MOVWF       FARG_Lcd_Out_text+1, 1
0x021E	0xDF56      	RCALL       _Lcd_Out
;port_control.c,45 :: 		Lcd_Out(2,1,second_line);                 // Write text in second row
0x0220	0x0E02      	MOVLW       2
0x0222	0x6F63      	MOVWF       FARG_Lcd_Out_row, 1
0x0224	0x0E01      	MOVLW       1
0x0226	0x6F64      	MOVWF       FARG_Lcd_Out_column, 1
0x0228	0xF065C062  	MOVFF       FARG_lcd_display_out_second_line, FARG_Lcd_Out_text
0x022C	0x0E00      	MOVLW       0
0x022E	0x6F66      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0230	0xDF4D      	RCALL       _Lcd_Out
;port_control.c,46 :: 		}
L_end_lcd_display_out:
0x0232	0x0012      	RETURN      0
; end of _lcd_display_out
_main:
0x0234	0xF002ECB3  	CALL        1382, 0
;port_control.c,68 :: 		void main() {
;port_control.c,69 :: 		lcd_display_prep();
0x0238	0xDFDB      	RCALL       _lcd_display_prep
;port_control.c,70 :: 		lcd_display_out(txt1, signature);
0x023A	0x0E15      	MOVLW       _txt1
0x023C	0x6F61      	MOVWF       FARG_lcd_display_out_first_line, 1
0x023E	0x0E22      	MOVLW       _signature
0x0240	0x6F62      	MOVWF       FARG_lcd_display_out_second_line, 1
0x0242	0xDFE1      	RCALL       _lcd_display_out
;port_control.c,73 :: 		TRISD = 0xFF;
0x0244	0x0EFF      	MOVLW       255
0x0246	0x6E95      	MOVWF       TRISD 
;port_control.c,74 :: 		ANSELD = 0x00;
0x0248	0x010F      	MOVLB       15
0x024A	0x6B3B      	CLRF        ANSELD, 1
;port_control.c,75 :: 		PORTD = 0x00;
0x024C	0x6A83      	CLRF        PORTD 
;port_control.c,78 :: 		TRISE = 0xFF;
0x024E	0x0EFF      	MOVLW       255
0x0250	0x6E96      	MOVWF       TRISE 
;port_control.c,79 :: 		ANSELE = 0x00;
0x0252	0x6B3C      	CLRF        ANSELE, 1
;port_control.c,80 :: 		PORTE = 0x00;
0x0254	0x6A84      	CLRF        PORTE 
;port_control.c,83 :: 		TRISC = 0x00;
0x0256	0x6A94      	CLRF        TRISC 
;port_control.c,84 :: 		PORTC = 0x00;
0x0258	0x6A82      	CLRF        PORTC 
;port_control.c,87 :: 		while(1) {
L_main0:
;port_control.c,89 :: 		PORTD = 0x00;
0x025A	0x6A83      	CLRF        PORTD 
;port_control.c,90 :: 		PORTC = 0x00;
0x025C	0x6A82      	CLRF        PORTC 
;port_control.c,93 :: 		if (PORTE && e_state != PORTE) { // turn on port E to enable logic High
0x025E	0x5284      	MOVF        PORTE, 1 
0x0260	0xE017      	BZ          L_main4
0x0262	0x0E00      	MOVLW       0
0x0264	0x185B      	XORWF       _e_state+1, 0 
0x0266	0xE102      	BNZ         L__main38
0x0268	0x5084      	MOVF        PORTE, 0 
0x026A	0x185A      	XORWF       _e_state, 0 
L__main38:
0x026C	0xE011      	BZ          L_main4
L__main34:
0x026E	0x010F      	MOVLB       15
;port_control.c,94 :: 		ANSELD = 0x00;
0x0270	0x6B3B      	CLRF        ANSELD, 1
;port_control.c,95 :: 		PORTD = 0xFF;
0x0272	0x0EFF      	MOVLW       255
0x0274	0x6E83      	MOVWF       PORTD 
;port_control.c,96 :: 		logic_state = 0;
0x0276	0x6A5C      	CLRF        _logic_state 
0x0278	0x6A5D      	CLRF        _logic_state+1 
;port_control.c,97 :: 		lcd_display_out(txt1, txt2);
0x027A	0x0E15      	MOVLW       _txt1
0x027C	0x0100      	MOVLB       0
0x027E	0x6F61      	MOVWF       FARG_lcd_display_out_first_line, 1
0x0280	0x0E31      	MOVLW       _txt2
0x0282	0x6F62      	MOVWF       FARG_lcd_display_out_second_line, 1
0x0284	0xDFC0      	RCALL       _lcd_display_out
;port_control.c,98 :: 		e_state = PORTE;
0x0286	0xF05ACF84  	MOVFF       PORTE, _e_state
0x028A	0x0E00      	MOVLW       0
0x028C	0x6E5B      	MOVWF       _e_state+1 
;port_control.c,99 :: 		} else if (e_state != PORTE) { // turn off port E to enable logic Low
0x028E	0xD017      	BRA         L_main5
L_main4:
0x0290	0x0E00      	MOVLW       0
0x0292	0x185B      	XORWF       _e_state+1, 0 
0x0294	0xE102      	BNZ         L__main39
0x0296	0x5084      	MOVF        PORTE, 0 
0x0298	0x185A      	XORWF       _e_state, 0 
L__main39:
0x029A	0xE011      	BZ          L_main6
;port_control.c,100 :: 		ANSELD = 0x00;
0x029C	0x010F      	MOVLB       15
0x029E	0x6B3B      	CLRF        ANSELD, 1
;port_control.c,101 :: 		PORTD = 0x00;
0x02A0	0x6A83      	CLRF        PORTD 
;port_control.c,102 :: 		logic_state = 1;
0x02A2	0x0E01      	MOVLW       1
0x02A4	0x6E5C      	MOVWF       _logic_state 
0x02A6	0x0E00      	MOVLW       0
0x02A8	0x6E5D      	MOVWF       _logic_state+1 
;port_control.c,103 :: 		lcd_display_out(txt1, txt3);
0x02AA	0x0E15      	MOVLW       _txt1
0x02AC	0x0100      	MOVLB       0
0x02AE	0x6F61      	MOVWF       FARG_lcd_display_out_first_line, 1
0x02B0	0x0E3C      	MOVLW       _txt3
0x02B2	0x6F62      	MOVWF       FARG_lcd_display_out_second_line, 1
0x02B4	0xDFA8      	RCALL       _lcd_display_out
;port_control.c,104 :: 		e_state = PORTE;
0x02B6	0xF05ACF84  	MOVFF       PORTE, _e_state
0x02BA	0x0E00      	MOVLW       0
0x02BC	0x6E5B      	MOVWF       _e_state+1 
;port_control.c,105 :: 		}
L_main6:
L_main5:
;port_control.c,107 :: 		if (RD0_bit == logic_state) {
0x02BE	0x6A01      	CLRF        R1 
0x02C0	0xB083      	BTFSC       RD0_bit, BitPos(RD0_bit+0) 
0x02C2	0x2A01      	INCF        R1, 1 
0x02C4	0x0E00      	MOVLW       0
0x02C6	0x185D      	XORWF       _logic_state+1, 0 
0x02C8	0xE102      	BNZ         L__main40
0x02CA	0x505C      	MOVF        _logic_state, 0 
0x02CC	0x1801      	XORWF       R1, 0 
L__main40:
0x02CE	0xE10F      	BNZ         L_main7
;port_control.c,108 :: 		PORTC = numbers[0];
0x02D0	0xFF82C046  	MOVFF       _numbers, PORTC
;port_control.c,109 :: 		delay_ms(3000);
0x02D4	0x0E1F      	MOVLW       31
0x02D6	0x6E0B      	MOVWF       R11, 0
0x02D8	0x0E71      	MOVLW       113
0x02DA	0x6E0C      	MOVWF       R12, 0
0x02DC	0x0E1E      	MOVLW       30
0x02DE	0x6E0D      	MOVWF       R13, 0
L_main8:
0x02E0	0x2E0D      	DECFSZ      R13, 1, 0
0x02E2	0xD7FE      	BRA         L_main8
0x02E4	0x2E0C      	DECFSZ      R12, 1, 0
0x02E6	0xD7FC      	BRA         L_main8
0x02E8	0x2E0B      	DECFSZ      R11, 1, 0
0x02EA	0xD7FA      	BRA         L_main8
0x02EC	0x0000      	NOP
;port_control.c,110 :: 		}
L_main7:
;port_control.c,112 :: 		if (RD1_bit == logic_state) {
0x02EE	0x6A01      	CLRF        R1 
0x02F0	0xB283      	BTFSC       RD1_bit, BitPos(RD1_bit+0) 
0x02F2	0x2A01      	INCF        R1, 1 
0x02F4	0x0E00      	MOVLW       0
0x02F6	0x185D      	XORWF       _logic_state+1, 0 
0x02F8	0xE102      	BNZ         L__main41
0x02FA	0x505C      	MOVF        _logic_state, 0 
0x02FC	0x1801      	XORWF       R1, 0 
L__main41:
0x02FE	0xE10F      	BNZ         L_main9
;port_control.c,113 :: 		PORTC = numbers[1];
0x0300	0xFF82C048  	MOVFF       _numbers+2, PORTC
;port_control.c,114 :: 		delay_ms(2000);
0x0304	0x0E15      	MOVLW       21
0x0306	0x6E0B      	MOVWF       R11, 0
0x0308	0x0E4B      	MOVLW       75
0x030A	0x6E0C      	MOVWF       R12, 0
0x030C	0x0EBE      	MOVLW       190
0x030E	0x6E0D      	MOVWF       R13, 0
L_main10:
0x0310	0x2E0D      	DECFSZ      R13, 1, 0
0x0312	0xD7FE      	BRA         L_main10
0x0314	0x2E0C      	DECFSZ      R12, 1, 0
0x0316	0xD7FC      	BRA         L_main10
0x0318	0x2E0B      	DECFSZ      R11, 1, 0
0x031A	0xD7FA      	BRA         L_main10
0x031C	0x0000      	NOP
;port_control.c,115 :: 		}
L_main9:
;port_control.c,117 :: 		if (RD2_bit == logic_state) {
0x031E	0x6A01      	CLRF        R1 
0x0320	0xB483      	BTFSC       RD2_bit, BitPos(RD2_bit+0) 
0x0322	0x2A01      	INCF        R1, 1 
0x0324	0x0E00      	MOVLW       0
0x0326	0x185D      	XORWF       _logic_state+1, 0 
0x0328	0xE102      	BNZ         L__main42
0x032A	0x505C      	MOVF        _logic_state, 0 
0x032C	0x1801      	XORWF       R1, 0 
L__main42:
0x032E	0xE120      	BNZ         L_main11
;port_control.c,118 :: 		PORTC = numbers[2];
0x0330	0xFF82C04A  	MOVFF       _numbers+4, PORTC
;port_control.c,119 :: 		delay_ms(1000);
0x0334	0x0E0B      	MOVLW       11
0x0336	0x6E0B      	MOVWF       R11, 0
0x0338	0x0E26      	MOVLW       38
0x033A	0x6E0C      	MOVWF       R12, 0
0x033C	0x0E5D      	MOVLW       93
0x033E	0x6E0D      	MOVWF       R13, 0
L_main12:
0x0340	0x2E0D      	DECFSZ      R13, 1, 0
0x0342	0xD7FE      	BRA         L_main12
0x0344	0x2E0C      	DECFSZ      R12, 1, 0
0x0346	0xD7FC      	BRA         L_main12
0x0348	0x2E0B      	DECFSZ      R11, 1, 0
0x034A	0xD7FA      	BRA         L_main12
0x034C	0x0000      	NOP
0x034E	0x0000      	NOP
;port_control.c,120 :: 		PORTC = numbers[3];
0x0350	0xFF82C04C  	MOVFF       _numbers+6, PORTC
;port_control.c,121 :: 		delay_ms(1000);
0x0354	0x0E0B      	MOVLW       11
0x0356	0x6E0B      	MOVWF       R11, 0
0x0358	0x0E26      	MOVLW       38
0x035A	0x6E0C      	MOVWF       R12, 0
0x035C	0x0E5D      	MOVLW       93
0x035E	0x6E0D      	MOVWF       R13, 0
L_main13:
0x0360	0x2E0D      	DECFSZ      R13, 1, 0
0x0362	0xD7FE      	BRA         L_main13
0x0364	0x2E0C      	DECFSZ      R12, 1, 0
0x0366	0xD7FC      	BRA         L_main13
0x0368	0x2E0B      	DECFSZ      R11, 1, 0
0x036A	0xD7FA      	BRA         L_main13
0x036C	0x0000      	NOP
0x036E	0x0000      	NOP
;port_control.c,122 :: 		}
L_main11:
;port_control.c,124 :: 		if (RD3_bit == logic_state) {
0x0370	0x6A01      	CLRF        R1 
0x0372	0xB683      	BTFSC       RD3_bit, BitPos(RD3_bit+0) 
0x0374	0x2A01      	INCF        R1, 1 
0x0376	0x0E00      	MOVLW       0
0x0378	0x185D      	XORWF       _logic_state+1, 0 
0x037A	0xE102      	BNZ         L__main43
0x037C	0x505C      	MOVF        _logic_state, 0 
0x037E	0x1801      	XORWF       R1, 0 
L__main43:
0x0380	0xE126      	BNZ         L_main14
;port_control.c,125 :: 		PORTC = numbers[4];
0x0382	0xFF82C04E  	MOVFF       _numbers+8, PORTC
;port_control.c,126 :: 		delay_ms(500);
0x0386	0x0E06      	MOVLW       6
0x0388	0x6E0B      	MOVWF       R11, 0
0x038A	0x0E13      	MOVLW       19
0x038C	0x6E0C      	MOVWF       R12, 0
0x038E	0x0EAD      	MOVLW       173
0x0390	0x6E0D      	MOVWF       R13, 0
L_main15:
0x0392	0x2E0D      	DECFSZ      R13, 1, 0
0x0394	0xD7FE      	BRA         L_main15
0x0396	0x2E0C      	DECFSZ      R12, 1, 0
0x0398	0xD7FC      	BRA         L_main15
0x039A	0x2E0B      	DECFSZ      R11, 1, 0
0x039C	0xD7FA      	BRA         L_main15
0x039E	0x0000      	NOP
0x03A0	0x0000      	NOP
;port_control.c,128 :: 		for (i=0; i < 3; i++) {
0x03A2	0x6A5E      	CLRF        _i 
L_main16:
0x03A4	0x0E03      	MOVLW       3
0x03A6	0x5C5E      	SUBWF       _i, 0 
0x03A8	0xE212      	BC          L_main17
;port_control.c,129 :: 		PORTC = numbers[5];
0x03AA	0xFF82C050  	MOVFF       _numbers+10, PORTC
;port_control.c,130 :: 		delay_ms(500);
0x03AE	0x0E06      	MOVLW       6
0x03B0	0x6E0B      	MOVWF       R11, 0
0x03B2	0x0E13      	MOVLW       19
0x03B4	0x6E0C      	MOVWF       R12, 0
0x03B6	0x0EAD      	MOVLW       173
0x03B8	0x6E0D      	MOVWF       R13, 0
L_main19:
0x03BA	0x2E0D      	DECFSZ      R13, 1, 0
0x03BC	0xD7FE      	BRA         L_main19
0x03BE	0x2E0C      	DECFSZ      R12, 1, 0
0x03C0	0xD7FC      	BRA         L_main19
0x03C2	0x2E0B      	DECFSZ      R11, 1, 0
0x03C4	0xD7FA      	BRA         L_main19
0x03C6	0x0000      	NOP
0x03C8	0x0000      	NOP
;port_control.c,128 :: 		for (i=0; i < 3; i++) {
0x03CA	0x2A5E      	INCF        _i, 1 
;port_control.c,131 :: 		}
0x03CC	0xD7EB      	BRA         L_main16
L_main17:
;port_control.c,132 :: 		}
L_main14:
;port_control.c,134 :: 		if (RD4_bit == logic_state) {
0x03CE	0x6A01      	CLRF        R1 
0x03D0	0xB883      	BTFSC       RD4_bit, BitPos(RD4_bit+0) 
0x03D2	0x2A01      	INCF        R1, 1 
0x03D4	0x0E00      	MOVLW       0
0x03D6	0x185D      	XORWF       _logic_state+1, 0 
0x03D8	0xE102      	BNZ         L__main44
0x03DA	0x505C      	MOVF        _logic_state, 0 
0x03DC	0x1801      	XORWF       R1, 0 
L__main44:
0x03DE	0xE120      	BNZ         L_main20
;port_control.c,135 :: 		PORTC = numbers[1];
0x03E0	0xFF82C048  	MOVFF       _numbers+2, PORTC
;port_control.c,136 :: 		delay_ms(250);
0x03E4	0x0E03      	MOVLW       3
0x03E6	0x6E0B      	MOVWF       R11, 0
0x03E8	0x0E8A      	MOVLW       138
0x03EA	0x6E0C      	MOVWF       R12, 0
0x03EC	0x0E55      	MOVLW       85
0x03EE	0x6E0D      	MOVWF       R13, 0
L_main21:
0x03F0	0x2E0D      	DECFSZ      R13, 1, 0
0x03F2	0xD7FE      	BRA         L_main21
0x03F4	0x2E0C      	DECFSZ      R12, 1, 0
0x03F6	0xD7FC      	BRA         L_main21
0x03F8	0x2E0B      	DECFSZ      R11, 1, 0
0x03FA	0xD7FA      	BRA         L_main21
0x03FC	0x0000      	NOP
0x03FE	0x0000      	NOP
;port_control.c,137 :: 		PORTC = numbers[0];
0x0400	0xFF82C046  	MOVFF       _numbers, PORTC
;port_control.c,138 :: 		delay_ms(250);
0x0404	0x0E03      	MOVLW       3
0x0406	0x6E0B      	MOVWF       R11, 0
0x0408	0x0E8A      	MOVLW       138
0x040A	0x6E0C      	MOVWF       R12, 0
0x040C	0x0E55      	MOVLW       85
0x040E	0x6E0D      	MOVWF       R13, 0
L_main22:
0x0410	0x2E0D      	DECFSZ      R13, 1, 0
0x0412	0xD7FE      	BRA         L_main22
0x0414	0x2E0C      	DECFSZ      R12, 1, 0
0x0416	0xD7FC      	BRA         L_main22
0x0418	0x2E0B      	DECFSZ      R11, 1, 0
0x041A	0xD7FA      	BRA         L_main22
0x041C	0x0000      	NOP
0x041E	0x0000      	NOP
;port_control.c,139 :: 		}
L_main20:
;port_control.c,141 :: 		if (RD5_bit == logic_state) {
0x0420	0x6A01      	CLRF        R1 
0x0422	0xBA83      	BTFSC       RD5_bit, BitPos(RD5_bit+0) 
0x0424	0x2A01      	INCF        R1, 1 
0x0426	0x0E00      	MOVLW       0
0x0428	0x185D      	XORWF       _logic_state+1, 0 
0x042A	0xE102      	BNZ         L__main45
0x042C	0x505C      	MOVF        _logic_state, 0 
0x042E	0x1801      	XORWF       R1, 0 
L__main45:
0x0430	0xE120      	BNZ         L_main23
;port_control.c,142 :: 		PORTC = numbers[6];
0x0432	0xFF82C052  	MOVFF       _numbers+12, PORTC
;port_control.c,143 :: 		delay_ms(1000);
0x0436	0x0E0B      	MOVLW       11
0x0438	0x6E0B      	MOVWF       R11, 0
0x043A	0x0E26      	MOVLW       38
0x043C	0x6E0C      	MOVWF       R12, 0
0x043E	0x0E5D      	MOVLW       93
0x0440	0x6E0D      	MOVWF       R13, 0
L_main24:
0x0442	0x2E0D      	DECFSZ      R13, 1, 0
0x0444	0xD7FE      	BRA         L_main24
0x0446	0x2E0C      	DECFSZ      R12, 1, 0
0x0448	0xD7FC      	BRA         L_main24
0x044A	0x2E0B      	DECFSZ      R11, 1, 0
0x044C	0xD7FA      	BRA         L_main24
0x044E	0x0000      	NOP
0x0450	0x0000      	NOP
;port_control.c,144 :: 		PORTC = numbers[7];
0x0452	0xFF82C054  	MOVFF       _numbers+14, PORTC
;port_control.c,145 :: 		delay_ms(1000);
0x0456	0x0E0B      	MOVLW       11
0x0458	0x6E0B      	MOVWF       R11, 0
0x045A	0x0E26      	MOVLW       38
0x045C	0x6E0C      	MOVWF       R12, 0
0x045E	0x0E5D      	MOVLW       93
0x0460	0x6E0D      	MOVWF       R13, 0
L_main25:
0x0462	0x2E0D      	DECFSZ      R13, 1, 0
0x0464	0xD7FE      	BRA         L_main25
0x0466	0x2E0C      	DECFSZ      R12, 1, 0
0x0468	0xD7FC      	BRA         L_main25
0x046A	0x2E0B      	DECFSZ      R11, 1, 0
0x046C	0xD7FA      	BRA         L_main25
0x046E	0x0000      	NOP
0x0470	0x0000      	NOP
;port_control.c,146 :: 		}
L_main23:
;port_control.c,148 :: 		if (RD6_bit == logic_state) {
0x0472	0x6A01      	CLRF        R1 
0x0474	0xBC83      	BTFSC       RD6_bit, BitPos(RD6_bit+0) 
0x0476	0x2A01      	INCF        R1, 1 
0x0478	0x0E00      	MOVLW       0
0x047A	0x185D      	XORWF       _logic_state+1, 0 
0x047C	0xE102      	BNZ         L__main46
0x047E	0x505C      	MOVF        _logic_state, 0 
0x0480	0x1801      	XORWF       R1, 0 
L__main46:
0x0482	0xE120      	BNZ         L_main26
;port_control.c,149 :: 		PORTC = numbers[8];
0x0484	0xFF82C056  	MOVFF       _numbers+16, PORTC
;port_control.c,150 :: 		delay_ms(750);
0x0488	0x0E08      	MOVLW       8
0x048A	0x6E0B      	MOVWF       R11, 0
0x048C	0x0E9D      	MOVLW       157
0x048E	0x6E0C      	MOVWF       R12, 0
0x0490	0x0E05      	MOVLW       5
0x0492	0x6E0D      	MOVWF       R13, 0
L_main27:
0x0494	0x2E0D      	DECFSZ      R13, 1, 0
0x0496	0xD7FE      	BRA         L_main27
0x0498	0x2E0C      	DECFSZ      R12, 1, 0
0x049A	0xD7FC      	BRA         L_main27
0x049C	0x2E0B      	DECFSZ      R11, 1, 0
0x049E	0xD7FA      	BRA         L_main27
0x04A0	0x0000      	NOP
0x04A2	0x0000      	NOP
;port_control.c,151 :: 		PORTC = numbers[9];
0x04A4	0xFF82C058  	MOVFF       _numbers+18, PORTC
;port_control.c,152 :: 		delay_ms(750);
0x04A8	0x0E08      	MOVLW       8
0x04AA	0x6E0B      	MOVWF       R11, 0
0x04AC	0x0E9D      	MOVLW       157
0x04AE	0x6E0C      	MOVWF       R12, 0
0x04B0	0x0E05      	MOVLW       5
0x04B2	0x6E0D      	MOVWF       R13, 0
L_main28:
0x04B4	0x2E0D      	DECFSZ      R13, 1, 0
0x04B6	0xD7FE      	BRA         L_main28
0x04B8	0x2E0C      	DECFSZ      R12, 1, 0
0x04BA	0xD7FC      	BRA         L_main28
0x04BC	0x2E0B      	DECFSZ      R11, 1, 0
0x04BE	0xD7FA      	BRA         L_main28
0x04C0	0x0000      	NOP
0x04C2	0x0000      	NOP
;port_control.c,153 :: 		}
L_main26:
;port_control.c,155 :: 		if (RD7_bit == logic_state) {
0x04C4	0x6A01      	CLRF        R1 
0x04C6	0xBE83      	BTFSC       RD7_bit, BitPos(RD7_bit+0) 
0x04C8	0x2A01      	INCF        R1, 1 
0x04CA	0x0E00      	MOVLW       0
0x04CC	0x185D      	XORWF       _logic_state+1, 0 
0x04CE	0xE102      	BNZ         L__main47
0x04D0	0x505C      	MOVF        _logic_state, 0 
0x04D2	0x1801      	XORWF       R1, 0 
L__main47:
0x04D4	0xE123      	BNZ         L_main29
;port_control.c,156 :: 		for (i=0; i < 10; i++) {
0x04D6	0x6A5E      	CLRF        _i 
L_main30:
0x04D8	0x0E0A      	MOVLW       10
0x04DA	0x5C5E      	SUBWF       _i, 0 
0x04DC	0xE21F      	BC          L_main31
;port_control.c,157 :: 		PORTC = numbers[i];
0x04DE	0xF000C05E  	MOVFF       _i, R0
0x04E2	0x0E00      	MOVLW       0
0x04E4	0x6E01      	MOVWF       R1 
0x04E6	0x3600      	RLCF        R0, 1 
0x04E8	0x9000      	BCF         R0, 0 
0x04EA	0x3601      	RLCF        R1, 1 
0x04EC	0x0E46      	MOVLW       _numbers
0x04EE	0x2400      	ADDWF       R0, 0 
0x04F0	0x6EE9      	MOVWF       FSR0L 
0x04F2	0x0E00      	MOVLW       hi_addr(_numbers)
0x04F4	0x2001      	ADDWFC      R1, 0 
0x04F6	0x6EEA      	MOVWF       FSR0L+1 
0x04F8	0xFF82CFEE  	MOVFF       POSTINC0, PORTC
;port_control.c,158 :: 		delay_ms(500);
0x04FC	0x0E06      	MOVLW       6
0x04FE	0x6E0B      	MOVWF       R11, 0
0x0500	0x0E13      	MOVLW       19
0x0502	0x6E0C      	MOVWF       R12, 0
0x0504	0x0EAD      	MOVLW       173
0x0506	0x6E0D      	MOVWF       R13, 0
L_main33:
0x0508	0x2E0D      	DECFSZ      R13, 1, 0
0x050A	0xD7FE      	BRA         L_main33
0x050C	0x2E0C      	DECFSZ      R12, 1, 0
0x050E	0xD7FC      	BRA         L_main33
0x0510	0x2E0B      	DECFSZ      R11, 1, 0
0x0512	0xD7FA      	BRA         L_main33
0x0514	0x0000      	NOP
0x0516	0x0000      	NOP
;port_control.c,156 :: 		for (i=0; i < 10; i++) {
0x0518	0x2A5E      	INCF        _i, 1 
;port_control.c,159 :: 		}
0x051A	0xD7DE      	BRA         L_main30
L_main31:
;port_control.c,160 :: 		}
L_main29:
;port_control.c,161 :: 		}
0x051C	0xD69E      	BRA         L_main0
;port_control.c,162 :: 		}
L_end_main:
0x051E	0xD7FF      	BRA         $+0
; end of _main
0x0566	0xF015EE10  	LFSR        1, 21
0x056A	0x0E45      	MOVLW       69
0x056C	0x6E00      	MOVWF       R0 
0x056E	0x0E01      	MOVLW       1
0x0570	0x6E01      	MOVWF       R1 
0x0572	0x0E20      	MOVLW       32
0x0574	0x6EF6      	MOVWF       4086 
0x0576	0x0E05      	MOVLW       5
0x0578	0x6EF7      	MOVWF       TBLPTRH 
0x057A	0x0E00      	MOVLW       0
0x057C	0x6EF8      	MOVWF       TBLPTRU 
0x057E	0xF000ECF0  	CALL        480, 0
0x0582	0x0012      	RETURN      0
;port_control.c,0 :: ?ICS_txt1
0x0520	0x6F50 ;?ICS_txt1+0
0x0522	0x7472 ;?ICS_txt1+2
0x0524	0x4320 ;?ICS_txt1+4
0x0526	0x6E6F ;?ICS_txt1+6
0x0528	0x7274 ;?ICS_txt1+8
0x052A	0x6C6F ;?ICS_txt1+10
0x052C	0x00 ;?ICS_txt1+12
; end of ?ICS_txt1
;port_control.c,0 :: ?ICS_signature
0x052D	0x7942 ;?ICS_signature+0
0x052F	0x5020 ;?ICS_signature+2
0x0531	0x6E65 ;?ICS_signature+4
0x0533	0x796E ;?ICS_signature+6
0x0535	0x4220 ;?ICS_signature+8
0x0537	0x6C65 ;?ICS_signature+10
0x0539	0x656C ;?ICS_signature+12
0x053B	0x00 ;?ICS_signature+14
; end of ?ICS_signature
;port_control.c,0 :: ?ICS_txt2
0x053C	0x6F4C ;?ICS_txt2+0
0x053E	0x6967 ;?ICS_txt2+2
0x0540	0x2063 ;?ICS_txt2+4
0x0542	0x4948 ;?ICS_txt2+6
0x0544	0x4847 ;?ICS_txt2+8
0x0546	0x00 ;?ICS_txt2+10
; end of ?ICS_txt2
;port_control.c,0 :: ?ICS_txt3
0x0547	0x6F4C ;?ICS_txt3+0
0x0549	0x6967 ;?ICS_txt3+2
0x054B	0x2063 ;?ICS_txt3+4
0x054D	0x4F4C ;?ICS_txt3+6
0x054F	0x0057 ;?ICS_txt3+8
; end of ?ICS_txt3
;port_control.c,0 :: ?ICS_numbers
0x0551	0x0055 ;?ICS_numbers+0
0x0553	0x00AA ;?ICS_numbers+2
0x0555	0x00F0 ;?ICS_numbers+4
0x0557	0x000F ;?ICS_numbers+6
0x0559	0x00FF ;?ICS_numbers+8
0x055B	0x0000 ;?ICS_numbers+10
0x055D	0x0033 ;?ICS_numbers+12
0x055F	0x00CC ;?ICS_numbers+14
0x0561	0x0081 ;?ICS_numbers+16
0x0563	0x007E ;?ICS_numbers+18
; end of ?ICS_numbers
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C       [6]    _Delay_1us
0x0022      [22]    _Delay_5500us
0x0038      [10]    _Delay_50us
0x0042     [126]    _Lcd_Cmd
0x00C0      [12]    _Lcd_Chr_CP
0x00CC     [126]    _Lcd_Out
0x014A     [150]    _Lcd_Init
0x01E0      [16]    ___CC2DW
0x01F0      [22]    _lcd_display_prep
0x0206      [46]    _lcd_display_out
0x0234     [748]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015      [13]    _txt1
0x0022      [15]    _signature
0x0031      [11]    _txt2
0x003C      [10]    _txt3
0x0046      [20]    _numbers
0x005A       [2]    _e_state
0x005C       [2]    _logic_state
0x005E       [1]    _i
0x005F       [0]    __Lib_Lcd_cmd_status
0x0060       [1]    Lcd_Out_i_L0
0x0061       [1]    FARG_lcd_display_out_first_line
0x0062       [1]    FARG_lcd_display_out_second_line
0x0063       [1]    FARG_Lcd_Out_row
0x0064       [1]    FARG_Lcd_Out_column
0x0065       [2]    FARG_Lcd_Out_text
0x0067       [1]    FARG_Lcd_Chr_CP_out_char
0x0068       [1]    FARG_Lcd_Cmd_out_char
0x0F39       [1]    ANSELB
0x0F3B       [1]    ANSELD
0x0F3C       [1]    ANSELE
0x0F82       [1]    PORTC
0x0F83       [0]    RD1_bit
0x0F83       [0]    RD0_bit
0x0F83       [0]    RD7_bit
0x0F83       [0]    RD5_bit
0x0F83       [0]    RD6_bit
0x0F83       [0]    RD2_bit
0x0F83       [0]    RD3_bit
0x0F83       [0]    RD4_bit
0x0F83       [1]    PORTD
0x0F84       [1]    PORTE
0x0F8A       [0]    LCD_D6
0x0F8A       [0]    LCD_D7
0x0F8A       [0]    LCD_D5
0x0F8A       [0]    LCD_RS
0x0F8A       [0]    LCD_EN
0x0F8A       [0]    LCD_D4
0x0F8A       [0]    LATB2_bit
0x0F8A       [0]    LATB1_bit
0x0F8A       [0]    LATB0_bit
0x0F8A       [0]    LATB3_bit
0x0F8A       [0]    LATB5_bit
0x0F8A       [0]    LATB4_bit
0x0F93       [0]    TRISB1_bit
0x0F93       [0]    TRISB4_bit
0x0F93       [0]    TRISB5_bit
0x0F93       [0]    TRISB0_bit
0x0F93       [0]    TRISB2_bit
0x0F93       [0]    LCD_EN_Direction
0x0F93       [0]    LCD_D6_Direction
0x0F93       [0]    LCD_D4_Direction
0x0F93       [0]    LCD_D5_Direction
0x0F93       [0]    LCD_D7_Direction
0x0F93       [0]    LCD_RS_Direction
0x0F93       [0]    TRISB3_bit
0x0F94       [1]    TRISC
0x0F95       [1]    TRISD
0x0F96       [1]    TRISE
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0520      [13]    ?ICS_txt1
0x052D      [15]    ?ICS_signature
0x053C      [11]    ?ICS_txt2
0x0547      [10]    ?ICS_txt3
0x0551      [20]    ?ICS_numbers
