;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 3/18/2025 3:31:52 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF003EF28  	GOTO        1616
_interrupt:
;numbering_systems.c,42 :: 		void interrupt() {
0x0008	0xF016C000  	MOVFF       R0, 22
0x000C	0xF015C001  	MOVFF       R1, 21
;numbering_systems.c,43 :: 		LATA = 0;                             // Turn off all 7seg displays
0x0010	0xF017CFE9  	MOVFF       FSR0L, 23
0x0014	0xF018CFEA  	MOVFF       FSR0H, 24
0x0018	0x6A89      	CLRF        LATA 
;numbering_systems.c,44 :: 		LATD = portd_array[portd_index];      // bring appropriate value to PORTD
0x001A	0x0E40      	MOVLW       _portd_array
0x001C	0x6EE9      	MOVWF       FSR0L 
0x001E	0x0E00      	MOVLW       hi_addr(_portd_array)
0x0020	0x6EEA      	MOVWF       FSR0L+1 
0x0022	0x503D      	MOVF        _portd_index, 0 
0x0024	0x26E9      	ADDWF       FSR0L, 1 
0x0026	0xB0D8      	BTFSC       STATUS, 0 
0x0028	0x2AEA      	INCF        FSR0L+1, 1 
0x002A	0xFF8CCFEE  	MOVFF       POSTINC0, LATD
;numbering_systems.c,45 :: 		LATA = shifter;                       // turn on appropriate 7seg. display
0x002E	0xFF89C03B  	MOVFF       _shifter, LATA
;numbering_systems.c,48 :: 		shifter <<= 1;
0x0032	0xF001C03B  	MOVFF       _shifter, R1
0x0036	0x3601      	RLCF        R1, 1 
0x0038	0x9001      	BCF         R1, 0 
0x003A	0xF03BC001  	MOVFF       R1, _shifter
;numbering_systems.c,49 :: 		if (shifter > 8u)
0x003E	0x5001      	MOVF        R1, 0 
0x0040	0x0808      	SUBLW       8
0x0042	0xE202      	BC          L_interrupt0
;numbering_systems.c,50 :: 		shifter = 1;
0x0044	0x0E01      	MOVLW       1
0x0046	0x6E3B      	MOVWF       _shifter 
L_interrupt0:
;numbering_systems.c,53 :: 		portd_index++ ;
0x0048	0x2A3D      	INCF        _portd_index, 1 
;numbering_systems.c,54 :: 		if (portd_index > 3u)
0x004A	0x503D      	MOVF        _portd_index, 0 
0x004C	0x0803      	SUBLW       3
0x004E	0xA0D8      	BTFSS       STATUS, 0 
;numbering_systems.c,55 :: 		portd_index = 0;             // turn on 1st, turn off 2nd 7seg.
0x0050	0x6A3D      	CLRF        _portd_index 
L_interrupt1:
;numbering_systems.c,56 :: 		TMR0L  =   0;                  // reset TIMER0 value
0x0052	0x6AD6      	CLRF        TMR0L 
;numbering_systems.c,57 :: 		TMR0IF_bit = 0;                // Clear TMR0IF
0x0054	0x94F2      	BCF         TMR0IF_bit, BitPos(TMR0IF_bit+0) 
;numbering_systems.c,58 :: 		}
L_end_interrupt:
L__interrupt11:
0x0056	0xF000C016  	MOVFF       22, R0
0x005A	0xF001C015  	MOVFF       21, R1
0x005E	0xFFE9C017  	MOVFF       23, FSR0L
0x0062	0xFFEAC018  	MOVFF       24, FSR0H
0x0066	0x0011      	RETFIE      1
; end of _interrupt
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x0068	0x0E21      	MOVLW       33
0x006A	0x6E0D      	MOVWF       R13, 0
L_Delay_50us2:
0x006C	0x2E0D      	DECFSZ      R13, 1, 0
0x006E	0xD7FE      	BRA         L_Delay_50us2
;__Lib_Delays.c,21 :: 		}
L_end_Delay_50us:
0x0070	0x0012      	RETURN      0
; end of _Delay_50us
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x0072	0x0E0F      	MOVLW       15
0x0074	0x6E0C      	MOVWF       R12, 0
0x0076	0x0E47      	MOVLW       71
0x0078	0x6E0D      	MOVWF       R13, 0
L_Delay_5500us5:
0x007A	0x2E0D      	DECFSZ      R13, 1, 0
0x007C	0xD7FE      	BRA         L_Delay_5500us5
0x007E	0x2E0C      	DECFSZ      R12, 1, 0
0x0080	0xD7FC      	BRA         L_Delay_5500us5
0x0082	0x0000      	NOP
0x0084	0x0000      	NOP
;__Lib_Delays.c,33 :: 		}
L_end_Delay_5500us:
0x0086	0x0012      	RETURN      0
; end of _Delay_5500us
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x0088	0x0000      	NOP
0x008A	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x008C	0x0012      	RETURN      0
; end of _Delay_1us
_Div_16x16_S_L:
;__Lib_Math.c,139 :: 		
;__Lib_Math.c,146 :: 		
0x008E	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,147 :: 		
0x0090	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,148 :: 		
0x0092	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,149 :: 		
0x0094	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,150 :: 		
0x0096	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,151 :: 		
0x0098	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,152 :: 		
0x009A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,153 :: 		
0x009C	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,154 :: 		
0x009E	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,155 :: 		
0x00A0	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,156 :: 		
0x00A2	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,158 :: 		
0x00A4	0x0E0F      	MOVLW       15
;__Lib_Math.c,159 :: 		
0x00A6	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,161 :: 		
0x00A8	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,162 :: 		
0x00AA	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,163 :: 		
0x00AC	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,164 :: 		
0x00AE	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,166 :: 		
0x00B0	0xA000      	BTFSS       R0, 0, 0
;__Lib_Math.c,167 :: 		
0x00B2	0xD006      	BRA         $+14
;__Lib_Math.c,168 :: 		
0x00B4	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,169 :: 		
0x00B6	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,170 :: 		
0x00B8	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,171 :: 		
0x00BA	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,172 :: 		
0x00BC	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,173 :: 		
0x00BE	0xD005      	BRA         $+12
;__Lib_Math.c,175 :: 		
0x00C0	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,176 :: 		
0x00C2	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,177 :: 		
0x00C4	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,178 :: 		
0x00C6	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,179 :: 		
0x00C8	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,181 :: 		
0x00CA	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,182 :: 		
0x00CC	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,184 :: 		
0x00CE	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,185 :: 		
0x00D0	0xD7EB      	BRA         $-40
;__Lib_Math.c,187 :: 		
0x00D2	0xB000      	BTFSC       R0, 0, 0
;__Lib_Math.c,188 :: 		
0x00D4	0xD006      	BRA         $+14
;__Lib_Math.c,189 :: 		
0x00D6	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,190 :: 		
0x00D8	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,191 :: 		
0x00DA	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,192 :: 		
0x00DC	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,193 :: 		
0x00DE	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,194 :: 		
0x00E0	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,195 :: 		
0x00E2	0x0000      	NOP
;__Lib_Math.c,197 :: 		
L_end_Div_16x16_S_L:
0x00E4	0x0012      	RETURN      0
; end of _Div_16x16_S_L
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x00E6	0xBE50      	BTFSC       FARG_Lcd_Cmd_out_char, 7 
0x00E8	0xD002      	BRA         L__Lcd_Cmd21
0x00EA	0x968A      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x00EC	0xD001      	BRA         L__Lcd_Cmd22
L__Lcd_Cmd21:
0x00EE	0x868A      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x00F0	0xBC50      	BTFSC       FARG_Lcd_Cmd_out_char, 6 
0x00F2	0xD002      	BRA         L__Lcd_Cmd23
0x00F4	0x948A      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x00F6	0xD001      	BRA         L__Lcd_Cmd24
L__Lcd_Cmd23:
0x00F8	0x848A      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x00FA	0xBA50      	BTFSC       FARG_Lcd_Cmd_out_char, 5 
0x00FC	0xD002      	BRA         L__Lcd_Cmd25
0x00FE	0x928A      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x0100	0xD001      	BRA         L__Lcd_Cmd26
L__Lcd_Cmd25:
0x0102	0x828A      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x0104	0xB850      	BTFSC       FARG_Lcd_Cmd_out_char, 4 
0x0106	0xD002      	BRA         L__Lcd_Cmd27
0x0108	0x908A      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x010A	0xD001      	BRA         L__Lcd_Cmd28
L__Lcd_Cmd27:
0x010C	0x808A      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x010E	0xB046      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x0110	0xD002      	BRA         L__Lcd_Cmd29
0x0112	0x888A      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x0114	0xD001      	BRA         L__Lcd_Cmd30
L__Lcd_Cmd29:
0x0116	0x988A      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x0118	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,29 :: 		
0x011A	0xDFB6      	RCALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x011C	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,33 :: 		
0x011E	0xB650      	BTFSC       FARG_Lcd_Cmd_out_char, 3 
0x0120	0xD002      	BRA         L__Lcd_Cmd31
0x0122	0x968A      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x0124	0xD001      	BRA         L__Lcd_Cmd32
L__Lcd_Cmd31:
0x0126	0x868A      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x0128	0xB450      	BTFSC       FARG_Lcd_Cmd_out_char, 2 
0x012A	0xD002      	BRA         L__Lcd_Cmd33
0x012C	0x948A      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x012E	0xD001      	BRA         L__Lcd_Cmd34
L__Lcd_Cmd33:
0x0130	0x848A      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x0132	0xB250      	BTFSC       FARG_Lcd_Cmd_out_char, 1 
0x0134	0xD002      	BRA         L__Lcd_Cmd35
0x0136	0x928A      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x0138	0xD001      	BRA         L__Lcd_Cmd36
L__Lcd_Cmd35:
0x013A	0x828A      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x013C	0xB050      	BTFSC       FARG_Lcd_Cmd_out_char, 0 
0x013E	0xD002      	BRA         L__Lcd_Cmd37
0x0140	0x908A      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x0142	0xD001      	BRA         L__Lcd_Cmd38
L__Lcd_Cmd37:
0x0144	0x808A      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x0146	0xB046      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x0148	0xD002      	BRA         L__Lcd_Cmd39
0x014A	0x888A      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x014C	0xD001      	BRA         L__Lcd_Cmd40
L__Lcd_Cmd39:
0x014E	0x988A      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x0150	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,41 :: 		
0x0152	0xDF9A      	RCALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x0154	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,44 :: 		
0x0156	0xA046      	BTFSS       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x0158	0xD002      	BRA         L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x015A	0xDF8B      	RCALL       _Delay_5500us
0x015C	0xD001      	BRA         L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x015E	0xDF84      	RCALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x0160	0x0012      	RETURN      0
; end of _Lcd_Cmd
_Mul_32x32_U:
;__Lib_Math.c,1616 :: 		
;__Lib_Math.c,1631 :: 		
0x0162	0x0E22      	MOVLW       34
;__Lib_Math.c,1632 :: 		
0x0164	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,1633 :: 		
0x0166	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,1634 :: 		
0x0168	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,1635 :: 		
0x016A	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,1636 :: 		
0x016C	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,1638 :: 		
_NEXT:
;__Lib_Math.c,1642 :: 		
0x016E	0x060C      	DECF        R12, 1, 0
;__Lib_Math.c,1643 :: 		
0x0170	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1644 :: 		
0x0172	0xD01F      	BRA         _EXIT2
;__Lib_Math.c,1645 :: 		
0x0174	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,1647 :: 		
_LOOP:
;__Lib_Math.c,1656 :: 		
0x0176	0x320B      	RRCF        R11, 1, 0
;__Lib_Math.c,1657 :: 		
0x0178	0x320A      	RRCF        R10, 1, 0
;__Lib_Math.c,1658 :: 		
0x017A	0x3209      	RRCF        R9, 1, 0
;__Lib_Math.c,1659 :: 		
0x017C	0x3208      	RRCF        R8, 1, 0
;__Lib_Math.c,1660 :: 		
0x017E	0x3203      	RRCF        R3, 1, 0
;__Lib_Math.c,1661 :: 		
0x0180	0x3202      	RRCF        R2, 1, 0
;__Lib_Math.c,1662 :: 		
0x0182	0x3201      	RRCF        R1, 1, 0
;__Lib_Math.c,1663 :: 		
0x0184	0x3200      	RRCF        R0, 1, 0
;__Lib_Math.c,1668 :: 		
0x0186	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1669 :: 		
0x0188	0xD7F2      	BRA         _NEXT
;__Lib_Math.c,1670 :: 		
0x018A	0x060C      	DECF        R12, 1, 0
;__Lib_Math.c,1671 :: 		
0x018C	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1672 :: 		
0x018E	0xD009      	BRA         _EXIT1
;__Lib_Math.c,1679 :: 		
0x0190	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1680 :: 		
0x0192	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1681 :: 		
0x0194	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1684 :: 		
0x0196	0x2209      	ADDWFC      R9, 1, 0
;__Lib_Math.c,1685 :: 		
0x0198	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1688 :: 		
0x019A	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,1689 :: 		
0x019C	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1692 :: 		
0x019E	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,1694 :: 		
0x01A0	0xD7EA      	BRA         _LOOP
;__Lib_Math.c,1696 :: 		
_EXIT1:
;__Lib_Math.c,1701 :: 		
0x01A2	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1702 :: 		
0x01A4	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1703 :: 		
0x01A6	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1706 :: 		
0x01A8	0x2209      	ADDWFC      R9, 1, 0
;__Lib_Math.c,1707 :: 		
0x01AA	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1710 :: 		
0x01AC	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,1711 :: 		
0x01AE	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1714 :: 		
0x01B0	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,1717 :: 		
_EXIT2:
;__Lib_Math.c,1719 :: 		
L_end_Mul_32x32_U:
0x01B2	0x0012      	RETURN      0
; end of _Mul_32x32_U
_Div_16x16_S:
;__Lib_Math.c,200 :: 		
;__Lib_Math.c,208 :: 		
0x01B4	0x5004      	MOVF        R4, 0 
0x01B6	0x0A00      	XORLW       0
0x01B8	0xE108      	BNZ         L_Div_16x16_S0
;__Lib_Math.c,209 :: 		
0x01BA	0x5005      	MOVF        R5, 0 
0x01BC	0x0A00      	XORLW       0
0x01BE	0xE105      	BNZ         L_Div_16x16_S1
;__Lib_Math.c,210 :: 		
0x01C0	0x0EFF      	MOVLW       255
0x01C2	0x6E00      	MOVWF       R0 
;__Lib_Math.c,211 :: 		
0x01C4	0x0E7F      	MOVLW       127
0x01C6	0x6E01      	MOVWF       R1 
;__Lib_Math.c,212 :: 		
0x01C8	0xD057      	BRA         L_end_Div_16x16_S
;__Lib_Math.c,213 :: 		
L_Div_16x16_S1:
L_Div_16x16_S0:
;__Lib_Math.c,216 :: 		
0x01CA	0x6A0D      	CLRF        R13, 0
;__Lib_Math.c,217 :: 		
0x01CC	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,218 :: 		
0x01CE	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,219 :: 		
0x01D0	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,220 :: 		
0x01D2	0x1000      	IORWF       R0, 0, 0
;__Lib_Math.c,221 :: 		
0x01D4	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,222 :: 		
0x01D6	0x0C00      	RETLW       0
;__Lib_Math.c,224 :: 		
0x01D8	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,225 :: 		
0x01DA	0x1805      	XORWF       R5, 0, 0
;__Lib_Math.c,226 :: 		
0x01DC	0x6E0A      	MOVWF       R10, 0
;__Lib_Math.c,227 :: 		
0x01DE	0xBE0A      	BTFSC       R10, 7, 0
;__Lib_Math.c,228 :: 		
0x01E0	0x1E0D      	COMF        R13, 1, 0
;__Lib_Math.c,230 :: 		
0x01E2	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,232 :: 		
0x01E4	0xAE05      	BTFSS       R5, 7, 0
;__Lib_Math.c,233 :: 		
0x01E6	0xD005      	BRA         $+12
;__Lib_Math.c,235 :: 		
0x01E8	0x1E04      	COMF        R4, 1, 0
;__Lib_Math.c,236 :: 		
0x01EA	0x1E05      	COMF        R5, 1, 0
;__Lib_Math.c,237 :: 		
0x01EC	0x2A04      	INCF        R4, 1, 0
;__Lib_Math.c,238 :: 		
0x01EE	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,239 :: 		
0x01F0	0x2A05      	INCF        R5, 1, 0
;__Lib_Math.c,241 :: 		
0x01F2	0xAE01      	BTFSS       R1, 7, 0
;__Lib_Math.c,242 :: 		
0x01F4	0xD005      	BRA         $+12
;__Lib_Math.c,244 :: 		
0x01F6	0x1E00      	COMF        R0, 1, 0
;__Lib_Math.c,245 :: 		
0x01F8	0x1E01      	COMF        R1, 1, 0
;__Lib_Math.c,246 :: 		
0x01FA	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,247 :: 		
0x01FC	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,248 :: 		
0x01FE	0x2A01      	INCF        R1, 1, 0
;__Lib_Math.c,250 :: 		
0x0200	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,251 :: 		
0x0202	0x1005      	IORWF       R5, 0, 0
;__Lib_Math.c,252 :: 		
0x0204	0x6E0A      	MOVWF       R10, 0
;__Lib_Math.c,253 :: 		
0x0206	0xBE0A      	BTFSC       R10, 7, 0
;__Lib_Math.c,254 :: 		
0x0208	0xD010      	BRA         $+34
;__Lib_Math.c,256 :: 		
0x020A	0xDF41      	RCALL       _Div_16x16_S_L
;__Lib_Math.c,258 :: 		
0x020C	0xB00B      	BTFSC       R11, 0, 0
;__Lib_Math.c,259 :: 		
0x020E	0xD020      	BRA         $+66
;__Lib_Math.c,261 :: 		
0x0210	0xAE0D      	BTFSS       R13, 7, 0
;__Lib_Math.c,262 :: 		
0x0212	0x0C00      	RETLW       0
;__Lib_Math.c,264 :: 		
0x0214	0x1E00      	COMF        R0, 1, 0
;__Lib_Math.c,265 :: 		
0x0216	0x1E01      	COMF        R1, 1, 0
;__Lib_Math.c,266 :: 		
0x0218	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,267 :: 		
0x021A	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,268 :: 		
0x021C	0x2A01      	INCF        R1, 1, 0
;__Lib_Math.c,270 :: 		
0x021E	0x1E08      	COMF        R8, 1, 0
;__Lib_Math.c,271 :: 		
0x0220	0x1E09      	COMF        R9, 1, 0
;__Lib_Math.c,272 :: 		
0x0222	0x2A08      	INCF        R8, 1, 0
;__Lib_Math.c,273 :: 		
0x0224	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,274 :: 		
0x0226	0x2A09      	INCF        R9, 1, 0
;__Lib_Math.c,276 :: 		
0x0228	0x0C00      	RETLW       0
;__Lib_Math.c,278 :: 		
0x022A	0xAE05      	BTFSS       R5, 7, 0
;__Lib_Math.c,279 :: 		
0x022C	0xD00D      	BRA         $+28
;__Lib_Math.c,280 :: 		
0x022E	0xBE01      	BTFSC       R1, 7, 0
;__Lib_Math.c,281 :: 		
0x0230	0xD007      	BRA         $+16
;__Lib_Math.c,282 :: 		
0x0232	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,283 :: 		
0x0234	0x6E09      	MOVWF       R9, 0
;__Lib_Math.c,284 :: 		
0x0236	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,285 :: 		
0x0238	0x6E08      	MOVWF       R8, 0
;__Lib_Math.c,286 :: 		
0x023A	0x6A01      	CLRF        R1, 0
;__Lib_Math.c,287 :: 		
0x023C	0x6A00      	CLRF        R0, 0
;__Lib_Math.c,288 :: 		
0x023E	0xD7E8      	BRA         $-46
;__Lib_Math.c,289 :: 		
0x0240	0x6A01      	CLRF        R1, 0
;__Lib_Math.c,290 :: 		
0x0242	0x6A00      	CLRF        R0, 0
;__Lib_Math.c,291 :: 		
0x0244	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,292 :: 		
0x0246	0x0C00      	RETLW       0
;__Lib_Math.c,294 :: 		
0x0248	0x1E01      	COMF        R1, 1, 0
;__Lib_Math.c,295 :: 		
0x024A	0x1E00      	COMF        R0, 1, 0
;__Lib_Math.c,296 :: 		
0x024C	0x2A0B      	INCF        R11, 1, 0
;__Lib_Math.c,297 :: 		
0x024E	0xD7DD      	BRA         $-68
;__Lib_Math.c,299 :: 		
0x0250	0x2A08      	INCF        R8, 1, 0
;__Lib_Math.c,300 :: 		
0x0252	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,301 :: 		
0x0254	0x2A09      	INCF        R9, 1, 0
;__Lib_Math.c,302 :: 		
0x0256	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,303 :: 		
0x0258	0x5C08      	SUBWF       R8, 0, 0
;__Lib_Math.c,304 :: 		
0x025A	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_Math.c,305 :: 		
0x025C	0xD7D9      	BRA         $-76
;__Lib_Math.c,306 :: 		
0x025E	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,307 :: 		
0x0260	0x5C09      	SUBWF       R9, 0, 0
;__Lib_Math.c,308 :: 		
0x0262	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_Math.c,309 :: 		
0x0264	0xD7D5      	BRA         $-84
;__Lib_Math.c,310 :: 		
0x0266	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,311 :: 		
0x0268	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,312 :: 		
0x026A	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,313 :: 		
0x026C	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,314 :: 		
0x026E	0x2A01      	INCF        R1, 1, 0
;__Lib_Math.c,315 :: 		
0x0270	0xAE01      	BTFSS       R1, 7, 0
;__Lib_Math.c,316 :: 		
0x0272	0xD7CE      	BRA         $-98
;__Lib_Math.c,317 :: 		
0x0274	0x0000      	NOP
;__Lib_Math.c,318 :: 		
0x0276	0x0CFF      	RETLW       255
;__Lib_Math.c,320 :: 		
L_end_Div_16x16_S:
0x0278	0x0012      	RETURN      0
; end of _Div_16x16_S
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x027A	0x9046      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,53 :: 		
0x027C	0xF050C04F  	MOVFF       FARG_Lcd_Chr_CP_out_char, FARG_Lcd_Cmd_out_char
0x0280	0xDF32      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x0282	0x8046      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x0284	0x0012      	RETURN      0
; end of _Lcd_Chr_CP
_mask:
;Display_Utils.c,2 :: 		unsigned short mask(unsigned short num) {
;Display_Utils.c,3 :: 		switch (num) {
0x0286	0xD01E      	BRA         L_mask0
;Display_Utils.c,4 :: 		case 0 : return 0x3F;
L_mask2:
0x0288	0x0E3F      	MOVLW       63
0x028A	0x6E00      	MOVWF       R0 
0x028C	0xD039      	BRA         L_end_mask
;Display_Utils.c,5 :: 		case 1 : return 0x06;
L_mask3:
0x028E	0x0E06      	MOVLW       6
0x0290	0x6E00      	MOVWF       R0 
0x0292	0xD036      	BRA         L_end_mask
;Display_Utils.c,6 :: 		case 2 : return 0x5B;
L_mask4:
0x0294	0x0E5B      	MOVLW       91
0x0296	0x6E00      	MOVWF       R0 
0x0298	0xD033      	BRA         L_end_mask
;Display_Utils.c,7 :: 		case 3 : return 0x4F;
L_mask5:
0x029A	0x0E4F      	MOVLW       79
0x029C	0x6E00      	MOVWF       R0 
0x029E	0xD030      	BRA         L_end_mask
;Display_Utils.c,8 :: 		case 4 : return 0x66;
L_mask6:
0x02A0	0x0E66      	MOVLW       102
0x02A2	0x6E00      	MOVWF       R0 
0x02A4	0xD02D      	BRA         L_end_mask
;Display_Utils.c,9 :: 		case 5 : return 0x6D;
L_mask7:
0x02A6	0x0E6D      	MOVLW       109
0x02A8	0x6E00      	MOVWF       R0 
0x02AA	0xD02A      	BRA         L_end_mask
;Display_Utils.c,10 :: 		case 6 : return 0x7D;
L_mask8:
0x02AC	0x0E7D      	MOVLW       125
0x02AE	0x6E00      	MOVWF       R0 
0x02B0	0xD027      	BRA         L_end_mask
;Display_Utils.c,11 :: 		case 7 : return 0x07;
L_mask9:
0x02B2	0x0E07      	MOVLW       7
0x02B4	0x6E00      	MOVWF       R0 
0x02B6	0xD024      	BRA         L_end_mask
;Display_Utils.c,12 :: 		case 8 : return 0x7F;
L_mask10:
0x02B8	0x0E7F      	MOVLW       127
0x02BA	0x6E00      	MOVWF       R0 
0x02BC	0xD021      	BRA         L_end_mask
;Display_Utils.c,13 :: 		case 9 : return 0x6F;
L_mask11:
0x02BE	0x0E6F      	MOVLW       111
0x02C0	0x6E00      	MOVWF       R0 
0x02C2	0xD01E      	BRA         L_end_mask
;Display_Utils.c,14 :: 		} //case end
L_mask0:
0x02C4	0x504F      	MOVF        FARG_mask_num, 0 
0x02C6	0x0A00      	XORLW       0
0x02C8	0xE0DF      	BZ          L_mask2
0x02CA	0x504F      	MOVF        FARG_mask_num, 0 
0x02CC	0x0A01      	XORLW       1
0x02CE	0xE0DF      	BZ          L_mask3
0x02D0	0x504F      	MOVF        FARG_mask_num, 0 
0x02D2	0x0A02      	XORLW       2
0x02D4	0xE0DF      	BZ          L_mask4
0x02D6	0x504F      	MOVF        FARG_mask_num, 0 
0x02D8	0x0A03      	XORLW       3
0x02DA	0xE0DF      	BZ          L_mask5
0x02DC	0x504F      	MOVF        FARG_mask_num, 0 
0x02DE	0x0A04      	XORLW       4
0x02E0	0xE0DF      	BZ          L_mask6
0x02E2	0x504F      	MOVF        FARG_mask_num, 0 
0x02E4	0x0A05      	XORLW       5
0x02E6	0xE0DF      	BZ          L_mask7
0x02E8	0x504F      	MOVF        FARG_mask_num, 0 
0x02EA	0x0A06      	XORLW       6
0x02EC	0xE0DF      	BZ          L_mask8
0x02EE	0x504F      	MOVF        FARG_mask_num, 0 
0x02F0	0x0A07      	XORLW       7
0x02F2	0xE0DF      	BZ          L_mask9
0x02F4	0x504F      	MOVF        FARG_mask_num, 0 
0x02F6	0x0A08      	XORLW       8
0x02F8	0xE0DF      	BZ          L_mask10
0x02FA	0x504F      	MOVF        FARG_mask_num, 0 
0x02FC	0x0A09      	XORLW       9
0x02FE	0xE0DF      	BZ          L_mask11
;Display_Utils.c,15 :: 		}
L_end_mask:
0x0300	0x0012      	RETURN      0
; end of _mask
_Div_16X16_U:
;__Lib_Math.c,102 :: 		
;__Lib_Math.c,109 :: 		
0x0302	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,110 :: 		
0x0304	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,111 :: 		
0x0306	0x0E10      	MOVLW       16
;__Lib_Math.c,112 :: 		
0x0308	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,113 :: 		
0x030A	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,114 :: 		
0x030C	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,115 :: 		
0x030E	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,116 :: 		
0x0310	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,117 :: 		
0x0312	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,118 :: 		
0x0314	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,119 :: 		
0x0316	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,120 :: 		
0x0318	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,121 :: 		
0x031A	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,122 :: 		
0x031C	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,123 :: 		
0x031E	0xD007      	BRA         $+16
;__Lib_Math.c,124 :: 		
0x0320	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,125 :: 		
0x0322	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,126 :: 		
0x0324	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,127 :: 		
0x0326	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,128 :: 		
0x0328	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,129 :: 		
0x032A	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,130 :: 		
0x032C	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,131 :: 		
0x032E	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,132 :: 		
0x0330	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,133 :: 		
0x0332	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,134 :: 		
0x0334	0xD7EA      	BRA         $-42
;__Lib_Math.c,136 :: 		
L_end_Div_16X16_U:
0x0336	0x0012      	RETURN      0
; end of _Div_16X16_U
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x0338	0xD00F      	BRA         L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x033A	0x0E80      	MOVLW       128
0x033C	0x6E49      	MOVWF       FARG_Lcd_Out_row 
0x033E	0xD019      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x0340	0x0EC0      	MOVLW       192
0x0342	0x6E49      	MOVWF       FARG_Lcd_Out_row 
0x0344	0xD016      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x0346	0x0E94      	MOVLW       148
0x0348	0x6E49      	MOVWF       FARG_Lcd_Out_row 
0x034A	0xD013      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x034C	0x0ED4      	MOVLW       212
0x034E	0x6E49      	MOVWF       FARG_Lcd_Out_row 
0x0350	0xD010      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x0352	0x0E80      	MOVLW       128
0x0354	0x6E49      	MOVWF       FARG_Lcd_Out_row 
;__Lib_Lcd.c,193 :: 		
0x0356	0xD00D      	BRA         L_Lcd_Out12
L_Lcd_Out11:
0x0358	0x5049      	MOVF        FARG_Lcd_Out_row, 0 
0x035A	0x0A01      	XORLW       1
0x035C	0xE0EE      	BZ          L_Lcd_Out13
0x035E	0x5049      	MOVF        FARG_Lcd_Out_row, 0 
0x0360	0x0A02      	XORLW       2
0x0362	0xE0EE      	BZ          L_Lcd_Out14
0x0364	0x5049      	MOVF        FARG_Lcd_Out_row, 0 
0x0366	0x0A03      	XORLW       3
0x0368	0xE0EE      	BZ          L_Lcd_Out15
0x036A	0x5049      	MOVF        FARG_Lcd_Out_row, 0 
0x036C	0x0A04      	XORLW       4
0x036E	0xE0EE      	BZ          L_Lcd_Out16
0x0370	0xD7F0      	BRA         L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x0372	0x044A      	DECF        FARG_Lcd_Out_column, 0 
0x0374	0x6E00      	MOVWF       R0 
0x0376	0x5049      	MOVF        FARG_Lcd_Out_row, 0 
0x0378	0x2600      	ADDWF       R0, 1 
0x037A	0xF049C000  	MOVFF       R0, FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x037E	0xF050C000  	MOVFF       R0, FARG_Lcd_Cmd_out_char
0x0382	0xDEB1      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x0384	0x9046      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,198 :: 		
0x0386	0x6A4D      	CLRF        Lcd_Out_i_L0 
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x0388	0x504D      	MOVF        Lcd_Out_i_L0, 0 
0x038A	0x244B      	ADDWF       FARG_Lcd_Out_text, 0 
0x038C	0x6EE9      	MOVWF       FSR0L 
0x038E	0x0E00      	MOVLW       0
0x0390	0x204C      	ADDWFC      FARG_Lcd_Out_text+1, 0 
0x0392	0x6EEA      	MOVWF       FSR0L+1 
0x0394	0x52EE      	MOVF        POSTINC0, 1 
0x0396	0xE00B      	BZ          L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x0398	0x504D      	MOVF        Lcd_Out_i_L0, 0 
0x039A	0x244B      	ADDWF       FARG_Lcd_Out_text, 0 
0x039C	0x6EE9      	MOVWF       FSR0L 
0x039E	0x0E00      	MOVLW       0
0x03A0	0x204C      	ADDWFC      FARG_Lcd_Out_text+1, 0 
0x03A2	0x6EEA      	MOVWF       FSR0L+1 
0x03A4	0xF04FCFEE  	MOVFF       POSTINC0, FARG_Lcd_Chr_CP_out_char
0x03A8	0xDF68      	RCALL       _Lcd_Chr_CP
0x03AA	0x2A4D      	INCF        Lcd_Out_i_L0, 1 
0x03AC	0xD7ED      	BRA         L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x03AE	0x8046      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x03B0	0x0012      	RETURN      0
; end of _Lcd_Out
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x03B2	0x9A93      	BCF         LCD_EN_Direction, BitPos(LCD_EN_Direction+0) 
;__Lib_Lcd.c,87 :: 		
0x03B4	0x9893      	BCF         LCD_RS_Direction, BitPos(LCD_RS_Direction+0) 
;__Lib_Lcd.c,88 :: 		
0x03B6	0x9093      	BCF         LCD_D4_Direction, BitPos(LCD_D4_Direction+0) 
;__Lib_Lcd.c,89 :: 		
0x03B8	0x9293      	BCF         LCD_D5_Direction, BitPos(LCD_D5_Direction+0) 
;__Lib_Lcd.c,90 :: 		
0x03BA	0x9493      	BCF         LCD_D6_Direction, BitPos(LCD_D6_Direction+0) 
;__Lib_Lcd.c,91 :: 		
0x03BC	0x9693      	BCF         LCD_D7_Direction, BitPos(LCD_D7_Direction+0) 
;__Lib_Lcd.c,93 :: 		
0x03BE	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,94 :: 		
0x03C0	0x988A      	BCF         LCD_RS, BitPos(LCD_RS+0) 
;__Lib_Lcd.c,95 :: 		
0x03C2	0x968A      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,96 :: 		
0x03C4	0x948A      	BCF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,97 :: 		
0x03C6	0x928A      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,98 :: 		
0x03C8	0x908A      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,100 :: 		
0x03CA	0xDE53      	RCALL       _Delay_5500us
;__Lib_Lcd.c,101 :: 		
0x03CC	0xDE52      	RCALL       _Delay_5500us
;__Lib_Lcd.c,102 :: 		
0x03CE	0xDE51      	RCALL       _Delay_5500us
;__Lib_Lcd.c,105 :: 		
0x03D0	0x828A      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,106 :: 		
0x03D2	0x808A      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,107 :: 		
0x03D4	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,108 :: 		
0x03D6	0xDE58      	RCALL       _Delay_1us
;__Lib_Lcd.c,109 :: 		
0x03D8	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,110 :: 		
0x03DA	0xDE4B      	RCALL       _Delay_5500us
;__Lib_Lcd.c,112 :: 		
0x03DC	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,113 :: 		
0x03DE	0xDE54      	RCALL       _Delay_1us
;__Lib_Lcd.c,114 :: 		
0x03E0	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,115 :: 		
0x03E2	0xDE47      	RCALL       _Delay_5500us
;__Lib_Lcd.c,117 :: 		
0x03E4	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,118 :: 		
0x03E6	0xDE50      	RCALL       _Delay_1us
;__Lib_Lcd.c,119 :: 		
0x03E8	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,120 :: 		
0x03EA	0xDE43      	RCALL       _Delay_5500us
;__Lib_Lcd.c,123 :: 		
0x03EC	0x908A      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,124 :: 		
0x03EE	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,125 :: 		
0x03F0	0xDE4B      	RCALL       _Delay_1us
;__Lib_Lcd.c,126 :: 		
0x03F2	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,127 :: 		
0x03F4	0xDE3E      	RCALL       _Delay_5500us
;__Lib_Lcd.c,130 :: 		
0x03F6	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,131 :: 		
0x03F8	0xDE47      	RCALL       _Delay_1us
;__Lib_Lcd.c,132 :: 		
0x03FA	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,134 :: 		
0x03FC	0x928A      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,135 :: 		
0x03FE	0x868A      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,136 :: 		
0x0400	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,137 :: 		
0x0402	0xDE42      	RCALL       _Delay_1us
;__Lib_Lcd.c,138 :: 		
0x0404	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,139 :: 		
0x0406	0xDE35      	RCALL       _Delay_5500us
;__Lib_Lcd.c,142 :: 		
0x0408	0x968A      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,143 :: 		
0x040A	0x808A      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,144 :: 		
0x040C	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,145 :: 		
0x040E	0xDE3C      	RCALL       _Delay_1us
;__Lib_Lcd.c,146 :: 		
0x0410	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,148 :: 		
0x0412	0x908A      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,149 :: 		
0x0414	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,150 :: 		
0x0416	0xDE38      	RCALL       _Delay_1us
;__Lib_Lcd.c,151 :: 		
0x0418	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,152 :: 		
0x041A	0xDE2B      	RCALL       _Delay_5500us
;__Lib_Lcd.c,155 :: 		
0x041C	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,156 :: 		
0x041E	0xDE34      	RCALL       _Delay_1us
;__Lib_Lcd.c,157 :: 		
0x0420	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,159 :: 		
0x0422	0x808A      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,160 :: 		
0x0424	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,161 :: 		
0x0426	0xDE30      	RCALL       _Delay_1us
;__Lib_Lcd.c,162 :: 		
0x0428	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,163 :: 		
0x042A	0xDE23      	RCALL       _Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x042C	0x908A      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,167 :: 		
0x042E	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,168 :: 		
0x0430	0xDE2B      	RCALL       _Delay_1us
;__Lib_Lcd.c,169 :: 		
0x0432	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,171 :: 		
0x0434	0x868A      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,172 :: 		
0x0436	0x848A      	BSF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,173 :: 		
0x0438	0x828A      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,174 :: 		
0x043A	0x808A      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,175 :: 		
0x043C	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,176 :: 		
0x043E	0xDE24      	RCALL       _Delay_1us
;__Lib_Lcd.c,177 :: 		
0x0440	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,179 :: 		
0x0442	0xDE17      	RCALL       _Delay_5500us
;__Lib_Lcd.c,181 :: 		
0x0444	0x8046      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x0446	0x0012      	RETURN      0
; end of _Lcd_Init
_VDelay_ms:
;__Lib_Delays.c,123 :: 		void VDelay_ms(unsigned Time_ms){
;__Lib_Delays.c,126 :: 		NumberOfCyc = Clock_kHz()>>2;
0x0448	0x0ED0      	MOVLW       208
0x044A	0x6E4B      	MOVWF       VDelay_ms_NumberOfCyc_L0 
0x044C	0x0E07      	MOVLW       7
0x044E	0x6E4C      	MOVWF       VDelay_ms_NumberOfCyc_L0+1 
0x0450	0x0E00      	MOVLW       0
0x0452	0x6E4D      	MOVWF       VDelay_ms_NumberOfCyc_L0+2 
0x0454	0x6E4E      	MOVWF       VDelay_ms_NumberOfCyc_L0+3 
;__Lib_Delays.c,127 :: 		NumberOfCyc *= Time_ms;
0x0456	0x0ED0      	MOVLW       208
0x0458	0x6E00      	MOVWF       R0 
0x045A	0x0E07      	MOVLW       7
0x045C	0x6E01      	MOVWF       R1 
0x045E	0x0E00      	MOVLW       0
0x0460	0x6E02      	MOVWF       R2 
0x0462	0x0E00      	MOVLW       0
0x0464	0x6E03      	MOVWF       R3 
0x0466	0xF004C049  	MOVFF       FARG_VDelay_ms_Time_ms, R4
0x046A	0xF005C04A  	MOVFF       FARG_VDelay_ms_Time_ms+1, R5
0x046E	0x0E00      	MOVLW       0
0x0470	0x6E06      	MOVWF       R6 
0x0472	0x6E07      	MOVWF       R7 
0x0474	0xDE76      	RCALL       _Mul_32x32_U
0x0476	0xF04BC000  	MOVFF       R0, VDelay_ms_NumberOfCyc_L0
0x047A	0xF04CC001  	MOVFF       R1, VDelay_ms_NumberOfCyc_L0+1
0x047E	0xF04DC002  	MOVFF       R2, VDelay_ms_NumberOfCyc_L0+2
0x0482	0xF04EC003  	MOVFF       R3, VDelay_ms_NumberOfCyc_L0+3
;__Lib_Delays.c,128 :: 		if (NumberOfCyc < 660)
0x0486	0x0E00      	MOVLW       0
0x0488	0x5C03      	SUBWF       R3, 0 
0x048A	0xE108      	BNZ         L__VDelay_ms54
0x048C	0x0E00      	MOVLW       0
0x048E	0x5C02      	SUBWF       R2, 0 
0x0490	0xE105      	BNZ         L__VDelay_ms54
0x0492	0x0E02      	MOVLW       2
0x0494	0x5C01      	SUBWF       R1, 0 
0x0496	0xE102      	BNZ         L__VDelay_ms54
0x0498	0x0E94      	MOVLW       148
0x049A	0x5C00      	SUBWF       R0, 0 
L__VDelay_ms54:
0x049C	0xE201      	BC          L_VDelay_ms23
;__Lib_Delays.c,129 :: 		return;
0x049E	0xD031      	BRA         L_end_VDelay_ms
L_VDelay_ms23:
;__Lib_Delays.c,130 :: 		NumberOfCyc -= 660;
0x04A0	0x0E94      	MOVLW       148
0x04A2	0x5E4B      	SUBWF       VDelay_ms_NumberOfCyc_L0, 1 
0x04A4	0x0E02      	MOVLW       2
0x04A6	0x5A4C      	SUBWFB      VDelay_ms_NumberOfCyc_L0+1, 1 
0x04A8	0x0E00      	MOVLW       0
0x04AA	0x5A4D      	SUBWFB      VDelay_ms_NumberOfCyc_L0+2, 1 
0x04AC	0x5A4E      	SUBWFB      VDelay_ms_NumberOfCyc_L0+3, 1 
;__Lib_Delays.c,131 :: 		NumberOfCyc >>=  5;
0x04AE	0x0E05      	MOVLW       5
0x04B0	0x6E00      	MOVWF       R0 
0x04B2	0x5000      	MOVF        R0, 0 
L__VDelay_ms55:
0x04B4	0xE007      	BZ          L__VDelay_ms56
0x04B6	0x324E      	RRCF        VDelay_ms_NumberOfCyc_L0+3, 1 
0x04B8	0x324D      	RRCF        VDelay_ms_NumberOfCyc_L0+2, 1 
0x04BA	0x324C      	RRCF        VDelay_ms_NumberOfCyc_L0+1, 1 
0x04BC	0x324B      	RRCF        VDelay_ms_NumberOfCyc_L0, 1 
0x04BE	0x9E4E      	BCF         VDelay_ms_NumberOfCyc_L0+3, 7 
0x04C0	0x0FFF      	ADDLW       255
0x04C2	0xD7F8      	BRA         L__VDelay_ms55
L__VDelay_ms56:
;__Lib_Delays.c,133 :: 		while (NumberOfCyc--)
L_VDelay_ms24:
0x04C4	0xF000C04B  	MOVFF       VDelay_ms_NumberOfCyc_L0, R0
0x04C8	0xF001C04C  	MOVFF       VDelay_ms_NumberOfCyc_L0+1, R1
0x04CC	0xF002C04D  	MOVFF       VDelay_ms_NumberOfCyc_L0+2, R2
0x04D0	0xF003C04E  	MOVFF       VDelay_ms_NumberOfCyc_L0+3, R3
0x04D4	0x0E01      	MOVLW       1
0x04D6	0x5E4B      	SUBWF       VDelay_ms_NumberOfCyc_L0, 1 
0x04D8	0x0E00      	MOVLW       0
0x04DA	0x5A4C      	SUBWFB      VDelay_ms_NumberOfCyc_L0+1, 1 
0x04DC	0x5A4D      	SUBWFB      VDelay_ms_NumberOfCyc_L0+2, 1 
0x04DE	0x5A4E      	SUBWFB      VDelay_ms_NumberOfCyc_L0+3, 1 
0x04E0	0x5000      	MOVF        R0, 0 
0x04E2	0x1001      	IORWF       R1, 0 
0x04E4	0x1002      	IORWF       R2, 0 
0x04E6	0x1003      	IORWF       R3, 0 
0x04E8	0xE00C      	BZ          L_VDelay_ms25
;__Lib_Delays.c,135 :: 		asm nop;
0x04EA	0x0000      	NOP
;__Lib_Delays.c,136 :: 		asm nop;
0x04EC	0x0000      	NOP
;__Lib_Delays.c,137 :: 		asm nop;
0x04EE	0x0000      	NOP
;__Lib_Delays.c,138 :: 		asm nop;
0x04F0	0x0000      	NOP
;__Lib_Delays.c,139 :: 		asm nop;
0x04F2	0x0000      	NOP
;__Lib_Delays.c,140 :: 		asm nop;
0x04F4	0x0000      	NOP
;__Lib_Delays.c,141 :: 		asm nop;
0x04F6	0x0000      	NOP
;__Lib_Delays.c,142 :: 		asm nop;
0x04F8	0x0000      	NOP
;__Lib_Delays.c,143 :: 		asm nop;
0x04FA	0x0000      	NOP
;__Lib_Delays.c,144 :: 		asm nop;
0x04FC	0x0000      	NOP
;__Lib_Delays.c,145 :: 		asm nop;
0x04FE	0x0000      	NOP
;__Lib_Delays.c,146 :: 		}
0x0500	0xD7E1      	BRA         L_VDelay_ms24
L_VDelay_ms25:
;__Lib_Delays.c,147 :: 		}
L_end_VDelay_ms:
0x0502	0x0012      	RETURN      0
; end of _VDelay_ms
_seven_seg_out:
;numbering_systems.c,83 :: 		void seven_seg_out() {
;numbering_systems.c,84 :: 		digit = number / 1000u ;             // extract thousands digit
0x0504	0x0EE8      	MOVLW       232
0x0506	0x6E04      	MOVWF       R4 
0x0508	0x0E03      	MOVLW       3
0x050A	0x6E05      	MOVWF       R5 
0x050C	0xF000C03E  	MOVFF       _number, R0
0x0510	0xF001C03F  	MOVFF       _number+1, R1
0x0514	0xDEF6      	RCALL       _Div_16X16_U
0x0516	0xF044C000  	MOVFF       R0, _digit
0x051A	0xF045C001  	MOVFF       R1, _digit+1
;numbering_systems.c,85 :: 		portd_array[3] = mask(digit);        // and store it to PORTD array
0x051E	0xF04FC000  	MOVFF       R0, FARG_mask_num
0x0522	0xDEB1      	RCALL       _mask
0x0524	0xF043C000  	MOVFF       R0, _portd_array+3
;numbering_systems.c,86 :: 		digit = (number / 100u) % 10u;       // extract hundreds digit
0x0528	0x0E64      	MOVLW       100
0x052A	0x6E04      	MOVWF       R4 
0x052C	0x0E00      	MOVLW       0
0x052E	0x6E05      	MOVWF       R5 
0x0530	0xF000C03E  	MOVFF       _number, R0
0x0534	0xF001C03F  	MOVFF       _number+1, R1
0x0538	0xDE3D      	RCALL       _Div_16x16_S
0x053A	0x0E0A      	MOVLW       10
0x053C	0x6E04      	MOVWF       R4 
0x053E	0x0E00      	MOVLW       0
0x0540	0x6E05      	MOVWF       R5 
0x0542	0xDE38      	RCALL       _Div_16x16_S
0x0544	0xF000C008  	MOVFF       R8, R0
0x0548	0xF001C009  	MOVFF       R9, R1
0x054C	0xF044C000  	MOVFF       R0, _digit
0x0550	0xF045C001  	MOVFF       R1, _digit+1
;numbering_systems.c,87 :: 		portd_array[2] = mask(digit);        // and store it to PORTD array
0x0554	0xF04FC000  	MOVFF       R0, FARG_mask_num
0x0558	0xDE96      	RCALL       _mask
0x055A	0xF042C000  	MOVFF       R0, _portd_array+2
;numbering_systems.c,88 :: 		digit = (number / 10u) % 10u;        // extract tens digit
0x055E	0x0E0A      	MOVLW       10
0x0560	0x6E04      	MOVWF       R4 
0x0562	0x0E00      	MOVLW       0
0x0564	0x6E05      	MOVWF       R5 
0x0566	0xF000C03E  	MOVFF       _number, R0
0x056A	0xF001C03F  	MOVFF       _number+1, R1
0x056E	0xDE22      	RCALL       _Div_16x16_S
0x0570	0x0E0A      	MOVLW       10
0x0572	0x6E04      	MOVWF       R4 
0x0574	0x0E00      	MOVLW       0
0x0576	0x6E05      	MOVWF       R5 
0x0578	0xDE1D      	RCALL       _Div_16x16_S
0x057A	0xF000C008  	MOVFF       R8, R0
0x057E	0xF001C009  	MOVFF       R9, R1
0x0582	0xF044C000  	MOVFF       R0, _digit
0x0586	0xF045C001  	MOVFF       R1, _digit+1
;numbering_systems.c,89 :: 		portd_array[1] = mask(digit);        // and store it to PORTD array
0x058A	0xF04FC000  	MOVFF       R0, FARG_mask_num
0x058E	0xDE7B      	RCALL       _mask
0x0590	0xF041C000  	MOVFF       R0, _portd_array+1
;numbering_systems.c,90 :: 		digit = number % 10u;                // extract ones digit
0x0594	0x0E0A      	MOVLW       10
0x0596	0x6E04      	MOVWF       R4 
0x0598	0x0E00      	MOVLW       0
0x059A	0x6E05      	MOVWF       R5 
0x059C	0xF000C03E  	MOVFF       _number, R0
0x05A0	0xF001C03F  	MOVFF       _number+1, R1
0x05A4	0xDE07      	RCALL       _Div_16x16_S
0x05A6	0xF000C008  	MOVFF       R8, R0
0x05AA	0xF001C009  	MOVFF       R9, R1
0x05AE	0xF044C000  	MOVFF       R0, _digit
0x05B2	0xF045C001  	MOVFF       R1, _digit+1
;numbering_systems.c,91 :: 		portd_array[0] = mask(digit);        // and store it to PORTD array
0x05B6	0xF04FC000  	MOVFF       R0, FARG_mask_num
0x05BA	0xDE65      	RCALL       _mask
0x05BC	0xF040C000  	MOVFF       R0, _portd_array
;numbering_systems.c,92 :: 		}
L_end_seven_seg_out:
0x05C0	0x0012      	RETURN      0
; end of _seven_seg_out
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x05C2	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x05C4	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x05C8	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x05CA	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x05CC	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x05CE	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x05D0	0x0012      	RETURN      0
; end of ___CC2DW
_lcd_display_prep:
;numbering_systems.c,94 :: 		void lcd_display_prep() {
;numbering_systems.c,95 :: 		ANSELB = 0;                        // Configure PORTB pins as digital
0x05D2	0x010F      	MOVLB       15
0x05D4	0x6B39      	CLRF        ANSELB, 1
;numbering_systems.c,96 :: 		Lcd_Init();                        // Initialize Lcd
0x05D6	0xDEED      	RCALL       _Lcd_Init
;numbering_systems.c,97 :: 		Lcd_Cmd(_LCD_CLEAR);               // Clear display
0x05D8	0x0E01      	MOVLW       1
0x05DA	0x6E50      	MOVWF       FARG_Lcd_Cmd_out_char 
0x05DC	0xDD84      	RCALL       _Lcd_Cmd
;numbering_systems.c,98 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);          // Cursor off
0x05DE	0x0E0C      	MOVLW       12
0x05E0	0x6E50      	MOVWF       FARG_Lcd_Cmd_out_char 
0x05E2	0xDD81      	RCALL       _Lcd_Cmd
;numbering_systems.c,99 :: 		}
L_end_lcd_display_prep:
0x05E4	0x0012      	RETURN      0
; end of _lcd_display_prep
_do_the_thing:
;numbering_systems.c,108 :: 		void do_the_thing(int i) {
;numbering_systems.c,109 :: 		number = i;
0x05E6	0xF03EC047  	MOVFF       FARG_do_the_thing_i, _number
0x05EA	0xF03FC048  	MOVFF       FARG_do_the_thing_i+1, _number+1
;numbering_systems.c,110 :: 		seven_seg_out();
0x05EE	0xDF8A      	RCALL       _seven_seg_out
;numbering_systems.c,111 :: 		PORTC = number;
0x05F0	0xFF82C03E  	MOVFF       _number, PORTC
;numbering_systems.c,112 :: 		vdelay_ms(delay_in_ms);
0x05F4	0xF049C039  	MOVFF       _delay_in_ms, FARG_VDelay_ms_Time_ms
0x05F8	0xF04AC03A  	MOVFF       _delay_in_ms+1, FARG_VDelay_ms_Time_ms+1
0x05FC	0xDF25      	RCALL       _VDelay_ms
;numbering_systems.c,113 :: 		}
L_end_do_the_thing:
0x05FE	0x0012      	RETURN      0
; end of _do_the_thing
_lcd_display_out:
;numbering_systems.c,101 :: 		void lcd_display_out(char first_line, char second_line) {
;numbering_systems.c,102 :: 		Lcd_Cmd(_LCD_CLEAR);               // Clear display
0x0600	0x0E01      	MOVLW       1
0x0602	0x6E50      	MOVWF       FARG_Lcd_Cmd_out_char 
0x0604	0xDD70      	RCALL       _Lcd_Cmd
;numbering_systems.c,103 :: 		Lcd_Out(1,1,first_line);                 // Write text in first row
0x0606	0x0E01      	MOVLW       1
0x0608	0x6E49      	MOVWF       FARG_Lcd_Out_row 
0x060A	0x0E01      	MOVLW       1
0x060C	0x6E4A      	MOVWF       FARG_Lcd_Out_column 
0x060E	0xF04BC047  	MOVFF       FARG_lcd_display_out_first_line, FARG_Lcd_Out_text
0x0612	0x0E00      	MOVLW       0
0x0614	0x6E4C      	MOVWF       FARG_Lcd_Out_text+1 
0x0616	0xDE90      	RCALL       _Lcd_Out
;numbering_systems.c,105 :: 		Lcd_Out(2,1,second_line);                 // Write text in second row
0x0618	0x0E02      	MOVLW       2
0x061A	0x6E49      	MOVWF       FARG_Lcd_Out_row 
0x061C	0x0E01      	MOVLW       1
0x061E	0x6E4A      	MOVWF       FARG_Lcd_Out_column 
0x0620	0xF04BC048  	MOVFF       FARG_lcd_display_out_second_line, FARG_Lcd_Out_text
0x0624	0x0E00      	MOVLW       0
0x0626	0x6E4C      	MOVWF       FARG_Lcd_Out_text+1 
0x0628	0xDE87      	RCALL       _Lcd_Out
;numbering_systems.c,106 :: 		}
L_end_lcd_display_out:
0x062A	0x0012      	RETURN      0
; end of _lcd_display_out
_seven_seg_prep:
;numbering_systems.c,60 :: 		void seven_seg_prep() {
;numbering_systems.c,61 :: 		ANSELA = 0;                    // Configure PORTA pins as digital
0x062C	0x010F      	MOVLB       15
0x062E	0x6B38      	CLRF        ANSELA, 1
;numbering_systems.c,62 :: 		ANSELD = 0;                    // Configure PORTD pins as digital
0x0630	0x6B3B      	CLRF        ANSELD, 1
;numbering_systems.c,64 :: 		TRISA = 0;                     // Configure PORTA as output
0x0632	0x6A92      	CLRF        TRISA 
;numbering_systems.c,65 :: 		LATA  = 0;                     // Clear PORTA
0x0634	0x6A89      	CLRF        LATA 
;numbering_systems.c,66 :: 		TRISD = 0;                     // Configure PORTD as output
0x0636	0x6A95      	CLRF        TRISD 
;numbering_systems.c,67 :: 		LATD  = 0;                     // Clear PORTD
0x0638	0x6A8C      	CLRF        LATD 
;numbering_systems.c,69 :: 		T0CON = 0xC4;                  // Set TMR0 in 8bit mode, assign prescaler to TMR0
0x063A	0x0EC4      	MOVLW       196
0x063C	0x6ED5      	MOVWF       T0CON 
;numbering_systems.c,70 :: 		TMR0L = 0;                     // clear TMROL
0x063E	0x6AD6      	CLRF        TMR0L 
;numbering_systems.c,71 :: 		digit = 0;
0x0640	0x6A44      	CLRF        _digit 
0x0642	0x6A45      	CLRF        _digit+1 
;numbering_systems.c,72 :: 		portd_index = 0;
0x0644	0x6A3D      	CLRF        _portd_index 
;numbering_systems.c,73 :: 		shifter = 1;
0x0646	0x0E01      	MOVLW       1
0x0648	0x6E3B      	MOVWF       _shifter 
;numbering_systems.c,75 :: 		GIE_bit = 1;
0x064A	0x8EF2      	BSF         GIE_bit, BitPos(GIE_bit+0) 
;numbering_systems.c,76 :: 		TMR0IE_bit = 1;
0x064C	0x8AF2      	BSF         TMR0IE_bit, BitPos(TMR0IE_bit+0) 
;numbering_systems.c,77 :: 		}
L_end_seven_seg_prep:
0x064E	0x0012      	RETURN      0
; end of _seven_seg_prep
_main:
0x0650	0xF003EC67  	CALL        1742, 0
;numbering_systems.c,115 :: 		void main() {
;numbering_systems.c,116 :: 		lcd_display_prep();
0x0654	0xDFBE      	RCALL       _lcd_display_prep
;numbering_systems.c,117 :: 		seven_seg_prep();
0x0656	0xDFEA      	RCALL       _seven_seg_prep
;numbering_systems.c,118 :: 		lcd_display_out(txt1, signature);
0x0658	0x0E19      	MOVLW       _txt1
0x065A	0x6E47      	MOVWF       FARG_lcd_display_out_first_line 
0x065C	0x0E2A      	MOVLW       _signature
0x065E	0x6E48      	MOVWF       FARG_lcd_display_out_second_line 
0x0660	0xDFCF      	RCALL       _lcd_display_out
;numbering_systems.c,120 :: 		TRISC=0b00000000; // set port C as output for all bits
0x0662	0x6A94      	CLRF        TRISC 
;numbering_systems.c,121 :: 		TRISC=0x00;       // same as above but with hex instead of binary
0x0664	0x6A94      	CLRF        TRISC 
;numbering_systems.c,122 :: 		PORTC=0b00000000; // clear port C (set all to logic low or 0 volts)
0x0666	0x6A82      	CLRF        PORTC 
;numbering_systems.c,124 :: 		while (1) {
L_main2:
;numbering_systems.c,126 :: 		for (i = 0; i < 5; i++) {
0x0668	0x6A3C      	CLRF        _i 
L_main4:
0x066A	0x0E05      	MOVLW       5
0x066C	0x5C3C      	SUBWF       _i, 0 
0x066E	0xE20C      	BC          L_main5
;numbering_systems.c,127 :: 		do_the_thing(0b00001111);
0x0670	0x0E0F      	MOVLW       15
0x0672	0x6E47      	MOVWF       FARG_do_the_thing_i 
0x0674	0x0E00      	MOVLW       0
0x0676	0x6E48      	MOVWF       FARG_do_the_thing_i+1 
0x0678	0xDFB6      	RCALL       _do_the_thing
;numbering_systems.c,128 :: 		do_the_thing(0b11110000);
0x067A	0x0EF0      	MOVLW       240
0x067C	0x6E47      	MOVWF       FARG_do_the_thing_i 
0x067E	0x0E00      	MOVLW       0
0x0680	0x6E48      	MOVWF       FARG_do_the_thing_i+1 
0x0682	0xDFB1      	RCALL       _do_the_thing
;numbering_systems.c,126 :: 		for (i = 0; i < 5; i++) {
0x0684	0x2A3C      	INCF        _i, 1 
;numbering_systems.c,129 :: 		}
0x0686	0xD7F1      	BRA         L_main4
L_main5:
;numbering_systems.c,132 :: 		for (i = 0; i < 5; i++) {
0x0688	0x6A3C      	CLRF        _i 
L_main7:
0x068A	0x0E05      	MOVLW       5
0x068C	0x5C3C      	SUBWF       _i, 0 
0x068E	0xE20C      	BC          L_main8
;numbering_systems.c,133 :: 		do_the_thing(0b01010101);
0x0690	0x0E55      	MOVLW       85
0x0692	0x6E47      	MOVWF       FARG_do_the_thing_i 
0x0694	0x0E00      	MOVLW       0
0x0696	0x6E48      	MOVWF       FARG_do_the_thing_i+1 
0x0698	0xDFA6      	RCALL       _do_the_thing
;numbering_systems.c,134 :: 		do_the_thing(0b10101010);
0x069A	0x0EAA      	MOVLW       170
0x069C	0x6E47      	MOVWF       FARG_do_the_thing_i 
0x069E	0x0E00      	MOVLW       0
0x06A0	0x6E48      	MOVWF       FARG_do_the_thing_i+1 
0x06A2	0xDFA1      	RCALL       _do_the_thing
;numbering_systems.c,132 :: 		for (i = 0; i < 5; i++) {
0x06A4	0x2A3C      	INCF        _i, 1 
;numbering_systems.c,135 :: 		}
0x06A6	0xD7F1      	BRA         L_main7
L_main8:
;numbering_systems.c,136 :: 		}
0x06A8	0xD7DF      	BRA         L_main2
;numbering_systems.c,137 :: 		}
L_end_main:
0x06AA	0xD7FF      	BRA         $+0
; end of _main
0x06CE	0xF019EE10  	LFSR        1, 25
0x06D2	0x0E22      	MOVLW       34
0x06D4	0x6E00      	MOVWF       R0 
0x06D6	0x0E01      	MOVLW       1
0x06D8	0x6E01      	MOVWF       R1 
0x06DA	0x0EAC      	MOVLW       172
0x06DC	0x6EF6      	MOVWF       4086 
0x06DE	0x0E06      	MOVLW       6
0x06E0	0x6EF7      	MOVWF       TBLPTRH 
0x06E2	0x0E00      	MOVLW       0
0x06E4	0x6EF8      	MOVWF       TBLPTRU 
0x06E6	0xF002ECE1  	CALL        1474, 0
0x06EA	0x0012      	RETURN      0
;numbering_systems.c,0 :: ?ICS_txt1
0x06AC	0x2043 ;?ICS_txt1+0
0x06AE	0x754E ;?ICS_txt1+2
0x06B0	0x626D ;?ICS_txt1+4
0x06B2	0x7265 ;?ICS_txt1+6
0x06B4	0x5320 ;?ICS_txt1+8
0x06B6	0x7379 ;?ICS_txt1+10
0x06B8	0x6574 ;?ICS_txt1+12
0x06BA	0x736D ;?ICS_txt1+14
0x06BC	0x00 ;?ICS_txt1+16
; end of ?ICS_txt1
;numbering_systems.c,0 :: ?ICS_signature
0x06BD	0x7942 ;?ICS_signature+0
0x06BF	0x5020 ;?ICS_signature+2
0x06C1	0x6E65 ;?ICS_signature+4
0x06C3	0x796E ;?ICS_signature+6
0x06C5	0x4220 ;?ICS_signature+8
0x06C7	0x6C65 ;?ICS_signature+10
0x06C9	0x656C ;?ICS_signature+12
0x06CB	0x00 ;?ICS_signature+14
; end of ?ICS_signature
;numbering_systems.c,0 :: ?ICS_delay_in_ms
0x06CC	0x01F4 ;?ICS_delay_in_ms+0
; end of ?ICS_delay_in_ms
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [96]    _interrupt
0x0068      [10]    _Delay_50us
0x0072      [22]    _Delay_5500us
0x0088       [6]    _Delay_1us
0x008E      [88]    _Div_16x16_S_L
0x00E6     [124]    _Lcd_Cmd
0x0162      [82]    _Mul_32x32_U
0x01B4     [198]    _Div_16x16_S
0x027A      [12]    _Lcd_Chr_CP
0x0286     [124]    _mask
0x0302      [54]    _Div_16X16_U
0x0338     [122]    _Lcd_Out
0x03B2     [150]    _Lcd_Init
0x0448     [188]    _VDelay_ms
0x0504     [190]    _seven_seg_out
0x05C2      [16]    ___CC2DW
0x05D2      [20]    _lcd_display_prep
0x05E6      [26]    _do_the_thing
0x0600      [44]    _lcd_display_out
0x062C      [36]    _seven_seg_prep
0x0650      [92]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0019      [17]    _txt1
0x002A      [15]    _signature
0x0039       [2]    _delay_in_ms
0x003B       [1]    _shifter
0x003C       [1]    _i
0x003D       [1]    _portd_index
0x003E       [2]    _number
0x0040       [4]    _portd_array
0x0044       [2]    _digit
0x0046       [0]    __Lib_Lcd_cmd_status
0x0047       [2]    FARG_do_the_thing_i
0x0047       [1]    FARG_lcd_display_out_first_line
0x0048       [1]    FARG_lcd_display_out_second_line
0x0049       [2]    FARG_VDelay_ms_Time_ms
0x0049       [1]    FARG_Lcd_Out_row
0x004A       [1]    FARG_Lcd_Out_column
0x004B       [4]    VDelay_ms_NumberOfCyc_L0
0x004B       [2]    FARG_Lcd_Out_text
0x004D       [1]    Lcd_Out_i_L0
0x004F       [1]    FARG_Lcd_Chr_CP_out_char
0x004F       [1]    FARG_mask_num
0x0050       [1]    FARG_Lcd_Cmd_out_char
0x0F38       [1]    ANSELA
0x0F39       [1]    ANSELB
0x0F3B       [1]    ANSELD
0x0F82       [1]    PORTC
0x0F89       [1]    LATA
0x0F8A       [0]    LATB5_bit
0x0F8A       [0]    LATB1_bit
0x0F8A       [0]    LATB0_bit
0x0F8A       [0]    LATB2_bit
0x0F8A       [0]    LATB4_bit
0x0F8A       [0]    LATB3_bit
0x0F8A       [0]    LCD_RS
0x0F8A       [0]    LCD_EN
0x0F8A       [0]    LCD_D7
0x0F8A       [0]    LCD_D6
0x0F8A       [0]    LCD_D4
0x0F8A       [0]    LCD_D5
0x0F8C       [1]    LATD
0x0F92       [1]    TRISA
0x0F93       [0]    LCD_D7_Direction
0x0F93       [0]    LCD_D5_Direction
0x0F93       [0]    LCD_D6_Direction
0x0F93       [0]    LCD_D4_Direction
0x0F93       [0]    LCD_RS_Direction
0x0F93       [0]    LCD_EN_Direction
0x0F93       [0]    TRISB5_bit
0x0F93       [0]    TRISB0_bit
0x0F93       [0]    TRISB4_bit
0x0F93       [0]    TRISB2_bit
0x0F93       [0]    TRISB1_bit
0x0F93       [0]    TRISB3_bit
0x0F94       [1]    TRISC
0x0F95       [1]    TRISD
0x0FD5       [1]    T0CON
0x0FD6       [1]    TMR0L
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [0]    TMR0IE_bit
0x0FF2       [0]    GIE_bit
0x0FF2       [0]    TMR0IF_bit
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x06AC      [17]    ?ICS_txt1
0x06BD      [15]    ?ICS_signature
0x06CC       [2]    ?ICS_delay_in_ms
